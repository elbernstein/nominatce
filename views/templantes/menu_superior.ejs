<style>

.modal-backdrop {
    background: #21223b !important;
    opacity: 0.76 !important;
  }

@media (max-width: 600px) {
  .tabla-guias thead {
    display: none;
  }
  .tabla-guias,
  .tabla-guias tbody,
  .tabla-guias tr,
  .tabla-guias td {
    display: block !important;
    width: 100% !important;
    box-sizing: border-box;
  }
  .tabla-guias .guia-row {
    margin-bottom: 1rem;
    border: 1px solid #e3e3e3;
    border-radius: 0.5rem;
    background: #fcfcfc;
    box-shadow: 0 1px 3px rgba(0,0,0,0.06);
    padding: 0.5rem 0.75rem;
    font-size: 0.93em;
  }
  .tabla-guias .guia-row td {
    position: relative;
    padding: 0.4em 0.5em 0.4em 45%;
    min-height: 1.6em;
    border: none;
    border-bottom: 1px solid #f0f0f0;
    font-size: 0.98em;
    background: none;
    line-height: 1.3;
    color: #333;
  }
  .tabla-guias .guia-row td:last-child {
    border-bottom: none;
    padding-bottom: 0.5em;
  }
  .tabla-guias .guia-row td:before {
    position: absolute;
    left: 0.7em;
    top: 0.38em;
    min-width: 38%;
    white-space: nowrap;
    font-size: 0.96em;
    font-weight: 500;
    color: #5d5d5d;
    content: attr(data-label);
    text-align: left;
  }
  .tabla-guias .guia-row td a {
    word-break: break-word;
    font-size: 0.97em;
    color: #2277bb;
  }
  .tabla-guias .guia-row td .btn, .tabla-guias .guia-row td i {
    font-size: 1.07em !important;
  }
}



td.day {
color: rgb(44, 46, 44) !important;
background-color: rgb(195, 248, 181); 
}
.modal-xxl {
  max-width: 90% !important; /* Puedes ajustar al gusto */
}
/* Cambiar el color de los sábados y domingos */
td.day[data-day="0"], td.day[data-day="6"] {
color: red !important;
}

.perfil-9 .topbar-item2 {
    display: none !important;
}

.perfil-9 #container22 {
    display: none !important;
}
  #seguiTable {
        width: 100%;
    }
    #seguiTable th.usuario-bold {
        width: 25%;
    }
    #seguiTable th.estado-normal {
        width: 20%;
    }
    #seguiTable th.fecha-red {
        width: 15%;
    }
    #seguiTable th,
    #seguiTable td {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
#contactos{
	
}
.has-new-messages a {
  background-color: #ff0000; /* Cambia esto al color que prefieras */
}
.overlay {
  display: none;
  height: 100%;
 
  
  z-index: 999;
}

/* Show the elements when 'visible' class is added */
.overlay.visible {
  display: block;
}
.message {
  max-width: 400px;
  margin-bottom: 10px;
}

.message.user {
  background-color: #cce5ff;
  align-self: flex-end;
}

.message.other {
  background-color: #e2e3e5;
  align-self: flex-start;
}



*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
#btn-mas{
    display: none;
}
.container22{
    position: fixed;
    bottom: 80px;
    right: 11px;
    z-index: 600;
}
.redes a, .btn-mas label{
    display: block;
    text-decoration: none;
    background: #245ce2;
    color: #fff;
    width: 50px;
    height: 50px;
    line-height: 55px;
    text-align: center;
    border-radius: 50%;
    box-shadow: 0px 1px 10px rgba(0,0,0,0.4);
    transition: all 500ms ease;
    cursor: pointer;
}
.redes a:hover{
    background: #fff;
    color: #245ce2;
}
.redes a{
    margin-bottom: -15px;
    opacity: 0;
    visibility: hidden;
}
#btn-mas:checked~ .redes a{
    margin-bottom: 10px;
    opacity: 1;
    visibility: visible;
}
.btn-mas label{
    cursor: pointer;
    background: #245ce2;
    font-size: 23px;
}
#btn-mas:checked ~ .btn-mas label{
    transform: rotate(135deg);
    font-size: 25px;
}


.custom-tooltip-rojas { /* Le puse un nombre específico para evitar conflictos */
    position: absolute; /* Necesario para posicionarlo cerca del enlace */
    background-color: #245ce2; /* Fondo azul (Bootstrap primary blue) */
    color: white;              /* Texto blanco */
    padding: 8px 12px;         /* Espaciado interno */
    border-radius: 5px;        /* Bordes redondeados */
    font-size: 1.1em;          /* Texto un poco más grande */
    z-index: 10000;            /* Asegura que esté por encima de otros elementos */
    display: none;             /* Oculto por defecto */
    white-space: nowrap;       /* Evita que el texto se divida en múltiples líneas si es corto */
    box-shadow: 0 2px 5px rgba(0,0,0,0.2); /* Sombra suave opcional */
    pointer-events: none;      /* El tooltip no interferirá con eventos del mouse */
}













</style>

<link rel="stylesheet" href="https://chatnube.com/css/widget-entry.css">


<div id="kt_header_mobile" class="header-mobile align-items-center header-mobile-fixed" ;>
  <!--begin::Logo-->
  <a href="index.html">
   <!-- <img alt="Logo" style="width: 110px; height: 60px;" src="assets/media/logos/logo-light.png" />-->
  </a>
  <!--end::Logo-->
  <!--begin::Toolbar-->
   <div class="d-flex align-items-center">
    <!--begin::Aside Mobile Toggle-->
    <button class="btn p-0 burger-icon burger-icon-left" id="kt_aside_mobile_toggle">
      <span></span>
    </button>
    <!--end::Aside Mobile Toggle-->
    <!--begin::Header Menu Mobile Toggle-->
    <button class="btn p-0 burger-icon ml-4" id="kt_header_mobile_toggle">
      <span></span>
    </button>
    <!--end::Header Menu Mobile Toggle-->
    <!--begin::Topbar Mobile Toggle-->
    <button class="btn btn-hover-text-primary p-0 ml-2" id="kt_header_mobile_topbar_toggle">
      <span class="svg-icon svg-icon-xl">
        <!--begin::Svg Icon | path:assets/media/svg/icons/General/User.svg-->
        <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
          <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
            <polygon points="0 0 24 0 24 24 0 24" />
            <path d="M12,11 C9.790861,11 8,9.209139 8,7 C8,4.790861 9.790861,3 12,3 C14.209139,3 16,4.790861 16,7 C16,9.209139 14.209139,11 12,11 Z" fill="#000000" fill-rule="nonzero" opacity="0.3" />
            <path d="M3.00065168,20.1992055 C3.38825852,15.4265159 7.26191235,13 11.9833413,13 C16.7712164,13 20.7048837,15.2931929 20.9979143,20.2 C21.0095879,20.3954741 20.9979143,21 20.2466999,21 C16.541124,21 11.0347247,21 3.72750223,21 C3.47671215,21 2.97953825,20.45918 3.00065168,20.1992055 Z" fill="#000000" fill-rule="nonzero" />
          </g>
        </svg>
        <!--end::Svg Icon-->
      </span>
    </button>
    <!--end::Topbar Mobile Toggle-->
  </div>
  <!--end::Toolbar-->
</div>
<div id="kt_header" class="header header-fixed">
    <!--begin::Container-->
    <div class="container-fluid d-flex align-items-stretch justify-content-between">
        <!--begin::Header Menu Wrapper-->
        <div class="header-menu-wrapper header-menu-wrapper-left" id="kt_header_menu_wrapper">
            <!--begin::Header Menu-->
            <div id="kt_header_menu" class="header-menu header-menu-mobile header-menu-layout-default">
                <!--begin::Header Nav-->
               
              
                <!--end::Header Nav-->
            </div>
            <!--end::Header Menu-->
        </div>
        <!--end::Header Menu Wrapper-->
        <!--begin::Topbar-->
        <div class="topbar">
            <!--begin::Search-->
         <!-- begin::User Panel-->
		<div id="kt_quick_user" class="offcanvas offcanvas-right p-10">
			<!--begin::Header-->
			<div class="offcanvas-header d-flex align-items-center justify-content-between pb-5">
				<h3 class="font-weight-bold m-0"><%= session.datos_permi.perfil %>
				<small class="text-muted font-size-sm ml-2">12 mensajes</small></h3>
				<a href="#" class="btn btn-xs btn-icon btn-light btn-hover-primary" id="kt_quick_user_close">
					<i class="ki ki-close icon-xs text-muted"></i>
				</a>
			</div>
			<!--end::Header-->
			<!--begin::Content-->
			<div class="offcanvas-content pr-5 mr-n5">
				<!--begin::Header-->
				<div class="d-flex align-items-center mt-5">
					<div class="symbol symbol-100 mr-5">
						<div class="symbol-label" style="background-image:url('assets/media/users/300_21.jpg')"></div>
						<i class="symbol-badge bg-success"></i>
					</div>
					<div class="d-flex flex-column">
						<a href="#" class="font-weight-bold font-size-h5 text-dark-75 text-hover-primary"><%= session.datos_permi.name %><n</a>
						<div class="text-muted mt-1"><%= session.datos_permi.cargo %></div>
						<div class="navi mt-2">
							<a href="#" class="navi-item">
								<span class="navi-link p-0 pb-2">
									<span class="navi-icon mr-1">
										<span class="svg-icon svg-icon-lg svg-icon-primary">
											<!--begin::Svg Icon | path:assets/media/svg/icons/Communication/Mail-notification.svg-->
											<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
												<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
													<rect x="0" y="0" width="24" height="24" />
													<path d="M21,12.0829584 C20.6747915,12.0283988 20.3407122,12 20,12 C16.6862915,12 14,14.6862915 14,18 C14,18.3407122 14.0283988,18.6747915 14.0829584,19 L5,19 C3.8954305,19 3,18.1045695 3,17 L3,8 C3,6.8954305 3.8954305,6 5,6 L19,6 C20.1045695,6 21,6.8954305 21,8 L21,12.0829584 Z M18.1444251,7.83964668 L12,11.1481833 L5.85557487,7.83964668 C5.4908718,7.6432681 5.03602525,7.77972206 4.83964668,8.14442513 C4.6432681,8.5091282 4.77972206,8.96397475 5.14442513,9.16035332 L11.6444251,12.6603533 C11.8664074,12.7798822 12.1335926,12.7798822 12.3555749,12.6603533 L18.8555749,9.16035332 C19.2202779,8.96397475 19.3567319,8.5091282 19.1603533,8.14442513 C18.9639747,7.77972206 18.5091282,7.6432681 18.1444251,7.83964668 Z" fill="#000000" />
													<circle fill="#000000" opacity="0.3" cx="19.5" cy="17.5" r="2.5" />
												</g>
											</svg>
											<!--end::Svg Icon-->
										</span>
									</span>
									<span class="navi-text text-muted text-hover-primary"><%= session.datos_permi.correo %></span>
								</span>
							</a>
							<form id="logoutForm"  style="display: none;">
								
							  </form>
							  
							  <a href="/logout" class="btn btn-sm btn-light-primary font-weight-bolder py-2 px-5" >Cerrar Sesión</a>
						</div>
					</div>
				</div>
				<!--end::Header-->
				<!--begin::Separator-->
				<div class="separator separator-dashed mt-8 mb-5"></div>
				<!--end::Separator-->
				<!--begin::Nav-->
				<div class="navi navi-spacer-x-0 p-0">
					<!--begin::Item-->
					<a href="custom/apps/user/profile-1/personal-information.html" class="navi-item">
						<div class="navi-link">
							<div class="symbol symbol-40 bg-light mr-3">
								<div class="symbol-label">
									<span class="svg-icon svg-icon-md svg-icon-success">
										<!--begin::Svg Icon | path:assets/media/svg/icons/General/Notification2.svg-->
										<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
											<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
												<rect x="0" y="0" width="24" height="24" />
												<path d="M13.2070325,4 C13.0721672,4.47683179 13,4.97998812 13,5.5 C13,8.53756612 15.4624339,11 18.5,11 C19.0200119,11 19.5231682,10.9278328 20,10.7929675 L20,17 C20,18.6568542 18.6568542,20 17,20 L7,20 C5.34314575,20 4,18.6568542 4,17 L4,7 C4,5.34314575 5.34314575,4 7,4 L13.2070325,4 Z" fill="#000000" />
												<circle fill="#000000" opacity="0.3" cx="18.5" cy="5.5" r="2.5" />
											</g>
										</svg>
										<!--end::Svg Icon-->
									</span>
								</div>
							</div>
							<div class="navi-text">
								<div class="font-weight-bold">Mi Perfil</div>
								<div class="text-muted">Configuración de Cuenta
								<span class="label label-light-danger label-inline font-weight-bold">Actualizar</span></div>
							</div>
						</div>
					</a>
					<!--end:Item-->
					<!--begin::Item-->
					<a href="custom/apps/user/profile-3.html" class="navi-item">
						<div class="navi-link">
							<div class="symbol symbol-40 bg-light mr-3">
								<div class="symbol-label">
									<span class="svg-icon svg-icon-md svg-icon-warning">
										<!--begin::Svg Icon | path:assets/media/svg/icons/Shopping/Chart-bar1.svg-->
										<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
											<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
												<rect x="0" y="0" width="24" height="24" />
												<rect fill="#000000" opacity="0.3" x="12" y="4" width="3" height="13" rx="1.5" />
												<rect fill="#000000" opacity="0.3" x="7" y="9" width="3" height="8" rx="1.5" />
												<path d="M5,19 L20,19 C20.5522847,19 21,19.4477153 21,20 C21,20.5522847 20.5522847,21 20,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,4 C3,3.44771525 3.44771525,3 4,3 C4.55228475,3 5,3.44771525 5,4 L5,19 Z" fill="#000000" fill-rule="nonzero" />
												<rect fill="#000000" opacity="0.3" x="17" y="11" width="3" height="6" rx="1.5" />
											</g>
										</svg>
										<!--end::Svg Icon-->
									</span>
								</div>
							</div>
							<div class="navi-text">
								<div class="font-weight-bold">Mis Mensajes</div>
								<div class="text-muted">Mensajes</div>
							</div>
						</div>
					</a>
					<!--end:Item-->
					<!--begin::Item-->
					<a href="custom/apps/user/profile-2.html" class="navi-item">
						<div class="navi-link">
							<div class="symbol symbol-40 bg-light mr-3">
								<div class="symbol-label">
									<span class="svg-icon svg-icon-md svg-icon-danger">
										<!--begin::Svg Icon | path:assets/media/svg/icons/Files/Selected-file.svg-->
										<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
											<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
												<polygon points="0 0 24 0 24 24 0 24" />
												<path d="M4.85714286,1 L11.7364114,1 C12.0910962,1 12.4343066,1.12568431 12.7051108,1.35473959 L17.4686994,5.3839416 C17.8056532,5.66894833 18,6.08787823 18,6.52920201 L18,19.0833333 C18,20.8738751 17.9795521,21 16.1428571,21 L4.85714286,21 C3.02044787,21 3,20.8738751 3,19.0833333 L3,2.91666667 C3,1.12612489 3.02044787,1 4.85714286,1 Z M8,12 C7.44771525,12 7,12.4477153 7,13 C7,13.5522847 7.44771525,14 8,14 L15,14 C15.5522847,14 16,13.5522847 16,13 C16,12.4477153 15.5522847,12 15,12 L8,12 Z M8,16 C7.44771525,16 7,16.4477153 7,17 C7,17.5522847 7.44771525,18 8,18 L11,18 C11.5522847,18 12,17.5522847 12,17 C12,16.4477153 11.5522847,16 11,16 L8,16 Z" fill="#000000" fill-rule="nonzero" opacity="0.3" />
												<path d="M6.85714286,3 L14.7364114,3 C15.0910962,3 15.4343066,3.12568431 15.7051108,3.35473959 L20.4686994,7.3839416 C20.8056532,7.66894833 21,8.08787823 21,8.52920201 L21,21.0833333 C21,22.8738751 20.9795521,23 19.1428571,23 L6.85714286,23 C5.02044787,23 5,22.8738751 5,21.0833333 L5,4.91666667 C5,3.12612489 5.02044787,3 6.85714286,3 Z M8,12 C7.44771525,12 7,12.4477153 7,13 C7,13.5522847 7.44771525,14 8,14 L15,14 C15.5522847,14 16,13.5522847 16,13 C16,12.4477153 15.5522847,12 15,12 L8,12 Z M8,16 C7.44771525,16 7,16.4477153 7,17 C7,17.5522847 7.44771525,18 8,18 L11,18 C11.5522847,18 12,17.5522847 12,17 C12,16.4477153 11.5522847,16 11,16 L8,16 Z" fill="#000000" fill-rule="nonzero" />
											</g>
										</svg>
										<!--end::Svg Icon-->
									</span>
								</div>
							</div>
							<div class="navi-text">
								<div class="font-weight-bold">Mis movimientos</div>
								<div class="text-muted">Notificacioens</div>
							</div>
						</div>
					</a>
					<!--end:Item-->
					<!--begin::Item-->
					<a href="custom/apps/userprofile-1/overview.html" class="navi-item">
						<div class="navi-link">
							<div class="symbol symbol-40 bg-light mr-3">
								<div class="symbol-label">
									<span class="svg-icon svg-icon-md svg-icon-primary">
										<!--begin::Svg Icon | path:assets/media/svg/icons/Communication/Mail-opened.svg-->
										<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
											<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
												<rect x="0" y="0" width="24" height="24" />
												<path d="M6,2 L18,2 C18.5522847,2 19,2.44771525 19,3 L19,12 C19,12.5522847 18.5522847,13 18,13 L6,13 C5.44771525,13 5,12.5522847 5,12 L5,3 C5,2.44771525 5.44771525,2 6,2 Z M7.5,5 C7.22385763,5 7,5.22385763 7,5.5 C7,5.77614237 7.22385763,6 7.5,6 L13.5,6 C13.7761424,6 14,5.77614237 14,5.5 C14,5.22385763 13.7761424,5 13.5,5 L7.5,5 Z M7.5,7 C7.22385763,7 7,7.22385763 7,7.5 C7,7.77614237 7.22385763,8 7.5,8 L10.5,8 C10.7761424,8 11,7.77614237 11,7.5 C11,7.22385763 10.7761424,7 10.5,7 L7.5,7 Z" fill="#000000" opacity="0.3" />
												<path d="M3.79274528,6.57253826 L12,12.5 L20.2072547,6.57253826 C20.4311176,6.4108595 20.7436609,6.46126971 20.9053396,6.68513259 C20.9668779,6.77033951 21,6.87277228 21,6.97787787 L21,17 C21,18.1045695 20.1045695,19 19,19 L5,19 C3.8954305,19 3,18.1045695 3,17 L3,6.97787787 C3,6.70173549 3.22385763,6.47787787 3.5,6.47787787 C3.60510559,6.47787787 3.70753836,6.51099993 3.79274528,6.57253826 Z" fill="#000000" />
											</g>
										</svg>
										<!--end::Svg Icon-->
									</span>
								</div>
							</div>
							<div class="navi-text">
								<div class="font-weight-bold">Mis TareaS</div>
								<div class="text-muted">Asignaciones y tareas</div>
							</div>
						</div>
					</a>
					<!--end:Item-->
				</div>
				<!--end::Nav-->
				<!--begin::Separator-->
				<div class="separator separator-dashed my-7"></div>
				<!--end::Separator-->
				<!--begin::Notifications-->
				<div>
					<!--begin:Heading-->
					
					<!--end::Item-->
				</div>
				<!--end::Notifications-->
			</div>
			<!--end::Content-->
		</div>
		<!-- end::User Panel-->
		<!--begin::Quick Cart-->   
            <!--end::Search-->
            
		<div id="kt_quick_panel" class="offcanvas offcanvas-right pt-5 pb-10 mt-20">
			<!--begin::Header-->
      
			<div class="offcanvas-header offcanvas-header-navs d-flex align-items-center justify-content-between mb-5">
				<ul class="nav nav-bold nav-tabs nav-tabs-line nav-tabs-line-3x nav-tabs-primary flex-grow-1 px-10" role="tablist">
					<li class="nav-item">
						<a class="nav-link active" data-toggle="tab" href="#kt_quick_panel_logs">Guía</a>
					</li>
					<li class="nav-item" >
						<a id="datos_remitente" class="nav-link" data-toggle="tab" href="#kt_quick_panel_notifications">Remitente</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" data-toggle="tab" href="#kt_quick_panel_settings">Destinatario</a>
					</li>
          <li class="nav-item">
						<a class="nav-link" data-toggle="tab" href="#kt_quick_panel_settings2">CR</a>
					</li>
				</ul>
				<div class="offcanvas-close mt-n1 pr-5">
					<a href="#" class="btn btn-xs btn-icon btn-light btn-hover-primary" id="kt_quick_panel_close">
						<i class="ki ki-close icon-xs text-muted"></i>
					</a>
				</div>
			</div>
			<!--end::Header-->
			<!--begin::Content-->
      <div class="offcanvas-content px-10">
        <div class="tab-content">
            <!--begin::Tabpane-->
            <div class="tab-pane fade show pt-3 pr-5 mr-n5 active" id="kt_quick_panel_logs" role="tabpanel">
                <!--begin::Section-->
                <div class="mb-15">
                    <h5 class="font-weight-bold mb-5">Buscar por Datos de Guía</h5>
                    <!--begin: Item-->
                    
                    <div class="d-flex align-items-center flex-wrap mb-1">
                        <label>Nro Guía:</label>
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text">
                                    <i class="la la-user"></i>
                                </span>
                            </div>
                            <input id="nro_Guia_1" type="text" class="form-control" placeholder="" />
                        </div>
                    </div>

                    <div class="d-flex align-items-center flex-wrap mb-1">
                      <label>Desde:</label>
                      <div class="input-group input-group-solid date" id="kt_datetimepicker_2" data-target-input="nearest">
                          <input type="text" class="form-control form-control-solid datetimepicker-input" placeholder="Desde" data-target="#kt_datetimepicker_2" />
                          <div class="input-group-append" data-target="#kt_datetimepicker_2" data-toggle="datetimepicker">
                              <span class="input-group-text">
                                  <i class="ki ki-calendar"></i>
                              </span>
                          </div>
                      </div>
                  </div>
                  
                  <div class="d-flex align-items-center flex-wrap mb-5">
                      <label>Hasta:</label>
                      <div class="input-group input-group-solid date" id="kt_datetimepicker_3" data-target-input="nearest">
                          <input type="text" class="form-control form-control-solid datetimepicker-input" placeholder="Hasta" data-target="#kt_datetimepicker_3" />
                          <div class="input-group-append" data-target="#kt_datetimepicker_3" data-toggle="datetimepicker">
                              <span class="input-group-text">
                                  <i class="ki ki-calendar"></i>
                              </span>
                          </div>
                      </div>
                  </div>
                    <!--end: Item-->
                    <!--begin: Item-->
                    <div class="d-flex align-items-center flex-wrap mb-1 agencia_bn" >
                        <label>Agencia:</label>
                        <select class="form-control" id="kt_select2_1-10" name="param2">
                            
                        </select>
                    </div>

                    <div class="d-flex align-items-center flex-wrap mb-1 agencia_bn" >
                        <label>Pais Destino1:</label>
                        <select class="form-control" id="kt_select2_1-11" name="param3">
                          <option value="" ></option>  
                          <option value="51">El Salvador</option>
                          <option value="185">Guatemala</option>
                          <option value="137">Honduras</option>
                          <option value="42">México</option>
                          <option value="209">Nicaragua</option>
                          <option value="55">USA</option>
                        </select>
                    </div>


                    <div class="d-flex align-items-center flex-wrap mb-1 agencia_bn" >
                      <label>Estado:</label>
                      <select class="form-control" id="kt_select2_1-1x" name="">
                        
                      </select>
                    </div>

                    <div class="d-flex align-items-center flex-wrap mb-1 agencia_bn" >
                      <label>ciudad:</label>
                      <select class="form-control" id="kt_select2_1-1x2" name="">
                        
                      </select>
                    </div>


                    <div class="d-flex align-items-center flex-wrap mb-1">
                      <label>Referencia 1:</label>
                      <div class="input-group">
                          <div class="input-group-prepend">
                              <span class="input-group-text">
                                  <i class="la la-user"></i>
                              </span>
                          </div>
                          <input id="referencia1" type="text" class="form-control" placeholder="" />
                      </div>
                  </div>

                  <div class="d-flex align-items-center flex-wrap mb-1">
                    <label>Referencia 2:</label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text">
                                <i class="la la-user"></i>
                            </span>
                        </div>
                        <input id="referencia2" type="text" class="form-control" placeholder="" />
                    </div>
                 </div>
                    <div class="d-flex align-items-center flex-wrap mb-5 agencia_bn" >
                      <label>Status Recogida:</label>
                      <select class="form-control" id="kt_select2_1-12" name="param3">
                        <option value="">Todas</option>
                        <option value="Delivery">Delivery</option>
                        <option value="Delivery Realizado">Delivery Realizado</option>
                        <option value="Pickup">Pickup</option>
                        <option value="Pendiente de Pago">Pendiente de Pago</option>
                        <option value="Pagado">Pagado</option>
                       
                      </select>
              </div>
                    <!--end: Item-->
                    <!--begin: Item-->
                  
                    <!--end: Item-->
                    <!--begin: Item-->
                    
                    <!--begin: Buttons-->
                    <div class="col-lg-9 ml-lg-auto">
                        <button type="reset" class="btn btn-success btn-success1 mr-2">Buscar</button>
                        
                    </div>
                    <!--end: Buttons-->
                </div>
            </div>
            <!--end::Tabpane-->
    
            <!--begin::Tabpane-->
            <div class="tab-pane fade pt-2 pr-5 mr-n5" id="kt_quick_panel_notifications" role="tabpanel">
                <!--begin::Nav-->
                <div class="navi navi-icon-circle navi-spacer-x-0">
                    
                  <div class="mb-15">
                    <h5 class="font-weight-bold mb-5">Buscar por Datos por Remitente</h5>
                    <!--begin: Item-->
                    <div class="d-flex align-items-center flex-wrap mb-5">
                        <label>Celular:</label>
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text">
                                    <i class="la la-user"></i>
                                </span>
                            </div>
                            <input id="celular_1" type="text" class="form-control" placeholder="" />
                        </div>
                    </div>
                    <!--end: Item-->
                    <!--begin: Item-->
                    <div class="d-flex align-items-center flex-wrap mb-5" >
                        <label>Nombre y apellido:</label>
                        <div class="input-group">
                          <div class="input-group-prepend">
                              <span class="input-group-text">
                                  <i class="la la-user"></i>
                              </span>
                          </div>
                          <input id="nombre_2" type="text" class="form-control" placeholder="" />
                      </div>
                    </div>

                    <div class="d-flex align-items-center flex-wrap mb-5">
                      <label>Desde:</label>
                      <div class="input-group input-group-solid date" id="kt_datetimepicker_4" data-target-input="nearest">
                          <input type="text" class="form-control form-control-solid datetimepicker-input" placeholder="Desde" data-target="#kt_datetimepicker_4" />
                          <div class="input-group-append" data-target="#kt_datetimepicker_4" data-toggle="datetimepicker">
                              <span class="input-group-text">
                                  <i class="ki ki-calendar"></i>
                              </span>
                          </div>
                      </div>
                  </div>
                  <!--end: Item-->
                  <!--begin: Item-->
                  <div class="d-flex align-items-center flex-wrap mb-5">
                      <label>Hasta:</label>
                      <div class="input-group input-group-solid date" id="kt_datetimepicker_5" data-target-input="nearest">
                          <input type="text" class="form-control form-control-solid datetimepicker-input" placeholder="Hasta" data-target="#kt_datetimepicker_5" />
                          <div class="input-group-append" data-target="#kt_datetimepicker_5" data-toggle="datetimepicker">
                              <span class="input-group-text">
                                  <i class="ki ki-calendar"></i>
                              </span>
                          </div>
                      </div>
                  </div>

                    <div class="d-flex align-items-center flex-wrap mb-5 agencia_bn" >
                      <label>Pais Destino:</label>
                      <select class="form-control" id="kt_select2_1-13" name="param4">
                        <option value="" ></option>  
                        <option value="51">El Salvador</option>
                        <option value="185">Guatemala</option>
                        <option value="137">Honduras</option>
                        <option value="42">México</option>
                        <option value="209">Nicaragua</option>
                        <option value="55">USA</option>
                      </select>
                  </div>

                  <div class="d-flex align-items-center flex-wrap mb-5 agencia_bn" >
                    <label>Estado:</label>
                    <select class="form-control" id="kt_select2_1-13y" name="">
                      
                    </select>
                  </div>

                  <div class="d-flex align-items-center flex-wrap mb-5 agencia_bn" >
                    <label>ciudad:</label>
                    <select class="form-control" id="kt_select2_1-13y2" name="">
                      
                    </select>
                  </div>



                  <div class="d-flex align-items-center flex-wrap mb-5 agencia_bn" >
                    <label>Status Recogida:</label>
                    <select class="form-control" id="kt_select2_1-22" name="param3">
                      <option value="">Todas</option>
                      <option value="Delivery">Delivery</option>
                      <option value="Delivery Realizado">Delivery Realizado</option>
                      <option value="Pickup">Pickup</option>
                      <option value="Pendiente de Pago">Pendiente de Pago</option>
                      <option value="Pagado">Pagado</option>
                     
                    </select>
            </div>
                    <!--end: Item-->
                    <!--begin: Item-->
                   
                    <!--end: Item-->
                    <!--begin: Item-->
                    
                    <!--begin: Buttons-->
                    <div class="col-lg-9 ml-lg-auto">
                        <button type="reset" class="btn btn-primary btn-success2 mr-2">Buscar</button>
                        
                    </div>
                    <!--end: Buttons-->
                </div>
                   
                    
                </div>
            </div>


            <div class="tab-pane fade pt-2 pr-5 mr-n5" id="kt_quick_panel_settings" role="tabpanel">
              <!--begin::Nav-->
              <div class="navi navi-icon-circle navi-spacer-x-0">
                  
                <div class="mb-15">
                  <h5 class="font-weight-bold mb-5">Buscar por Datos por Destinatario</h5>
                  <!--begin: Item-->
                  <div class="d-flex align-items-center flex-wrap mb-5">
                      <label>Celular:</label>
                      <div class="input-group">
                          <div class="input-group-prepend">
                              <span class="input-group-text">
                                  <i class="la la-user"></i>
                              </span>
                          </div>
                          <input id="celular_3" type="text" class="form-control" placeholder="" />
                      </div>
                  </div>
                  <!--end: Item-->
                  <!--begin: Item-->
                  <div class="d-flex align-items-center flex-wrap mb-5" >
                      <label>Nombre y apellido:</label>
                      <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text">
                                <i class="la la-user"></i>
                            </span>
                        </div>
                        <input id="nombre_3" type="text" class="form-control" placeholder="" />
                    </div>
                  </div>

                  <div class="d-flex align-items-center flex-wrap mb-5">
                    <label>Desde:</label>
                    <div class="input-group input-group-solid date" id="kt_datetimepicker_6" data-target-input="nearest">
                        <input type="text" class="form-control form-control-solid datetimepicker-input" placeholder="Desde" data-target="#kt_datetimepicker_6" />
                        <div class="input-group-append" data-target="#kt_datetimepicker_6" data-toggle="datetimepicker">
                            <span class="input-group-text">
                                <i class="ki ki-calendar"></i>
                            </span>
                        </div>
                    </div>
                </div>
                <!--end: Item-->
                <!--begin: Item-->
                <div class="d-flex align-items-center flex-wrap mb-5">
                    <label>Hasta:</label>
                    <div class="input-group input-group-solid date" id="kt_datetimepicker_7" data-target-input="nearest">
                        <input type="text" class="form-control form-control-solid datetimepicker-input" placeholder="Hasta" data-target="#kt_datetimepicker_7" />
                        <div class="input-group-append" data-target="#kt_datetimepicker_7" data-toggle="datetimepicker">
                            <span class="input-group-text">
                                <i class="ki ki-calendar"></i>
                            </span>
                        </div>
                    </div>
                </div>

                  <div class="d-flex align-items-center flex-wrap mb-5 agencia_bn" >
                    <label>Pais Destino:</label>
                    <select class="form-control" id="kt_select2_1-14" name="param4">
                      <option value="" ></option>  
                      <option value="51">El Salvador</option>
                      <option value="185">Guatemala</option>
                      <option value="137">Honduras</option>
                      <option value="42">México</option>
                      <option value="209">Nicaragua</option>
                      <option value="55">USA</option>
                    </select>
                </div>


                <div class="d-flex align-items-center flex-wrap mb-5 agencia_bn" >
                  <label>Estado:</label>
                  <select class="form-control" id="kt_select2_1-14y" name="">
                    
                  </select>
                </div>

                <div class="d-flex align-items-center flex-wrap mb-5 agencia_bn" >
                  <label>ciudad:</label>
                  <select class="form-control" id="kt_select2_1-14y2" name="">
                    
                  </select>
                </div>


                <div class="d-flex align-items-center flex-wrap mb-5 agencia_bn" >
                  <label>Status Recogida:</label>
                  <select class="form-control" id="kt_select2_1-32" name="param3">
                    <option value="">Todas</option>
                    <option value="Delivery">Delivery</option>
                    <option value="Delivery Realizado">Delivery Realizado</option>
                    <option value="Pickup">Pickup</option>
                    <option value="Pendiente de Pago">Pendiente de Pago</option>
                    <option value="Pagado">Pagado</option>
                   
                  </select>
              </div>

                  <!--end: Item-->
                  <!--begin: Item-->
                 
                  <!--end: Item-->
                  <!--begin: Item-->
                  
                  <!--begin: Buttons-->
                  <div class="col-lg-9 ml-lg-auto">
                      <button type="reset" class="btn btn-danger btn-success3 mr-2">Buscar</button>
                      
                  </div>
                  <!--end: Buttons-->
              </div>
                 
                  
              </div>
          </div>



          <div class="tab-pane fade pt-2 pr-5 mr-n5" id="kt_quick_panel_settings2" role="tabpanel">
            <!--begin::Nav-->
            <div class="navi navi-icon-circle navi-spacer-x-0">
                
              <div class="mb-15">
                <h5 class="font-weight-bold mb-5">Buscar por Datos por Destinatario</h5>
                <!--begin: Item-->
                <div class="d-flex align-items-center flex-wrap mb-5">
                    <label>CR:</label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text">
                                <i class="la la-user"></i>
                            </span>
                        </div>
                        <input id="cr" type="text" class="form-control" placeholder="" />
                    </div>
                </div>
       
              </div>

               
            
                <!--end: Item-->
                <!--begin: Item-->
                
                <!--begin: Buttons-->
                <div class="col-lg-9 ml-lg-auto">
                    <button type="reset" class="btn btn-danger btn-success4 mr-2">Buscar</button>
                    
                </div>
                <!--end: Buttons-->
            </div>
               
                
            </div>
        </div>
          
    </div>
    
    
			<!--end::Content-->
		</div>


		<div class="modal modal-sticky modal-sticky-bottom-right" id="kt_chat_modal" role="dialog" data-backdrop="false">
			<div class="modal-dialog" role="document">
			  <div class="modal-content">
				
				<div class="card card-custom">
				  <!--begin::Header-->
				  <div class="card-header align-items-center px-4 py-3">
					<div class="text-left flex-grow-1">
					  <!--begin::Dropdown Menu-->
					  <div class="dropdown dropdown-inline">
						<button type="button" class="btn btn-clean btn-sm btn-icon btn-icon-md" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
						  <span class="svg-icon svg-icon-lg">
							<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
								<g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
									<polygon points="0 0 24 0 24 24 0 24"></polygon>
									<path d="M18,8 L16,8 C15.4477153,8 15,7.55228475 15,7 C15,6.44771525 15.4477153,6 16,6 L18,6 L18,4 C18,3.44771525 18.4477153,3 19,3 C19.5522847,3 20,3.44771525 20,4 L20,6 L22,6 C22.5522847,6 23,6.44771525 23,7 C23,7.55228475 22.5522847,8 22,8 L20,8 L20,10 C20,10.5522847 19.5522847,11 19,11 C18.4477153,11 18,10.5522847 18,10 L18,8 Z M9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 Z" fill="#000000" fill-rule="nonzero" opacity="0.3"></path>
									<path d="M0.00065168429,20.1992055 C0.388258525,15.4265159 4.26191235,13 8.98334134,13 C13.7712164,13 17.7048837,15.2931929 17.9979143,20.2 C18.0095879,20.3954741 17.9979143,21 17.2466999,21 C13.541124,21 8.03472472,21 0.727502227,21 C0.476712155,21 -0.0204617505,20.45918 0.00065168429,20.1992055 Z" fill="#000000" fill-rule="nonzero"></path>
								</g>
							</svg>
						  </span>
						</button>
						<div class="dropdown-menu p-0 m-0 dropdown-menu-right dropdown-menu-md">
						  <!--begin::Navigation-->
						  <ul class="navi navi-hover py-5">
							<li class="navi-item">
							  <a  class="navi-link navi-link1">
								<span class="navi-icon">
								  <i class="flaticon2-drop"></i>
								</span>
								<span class="navi-text">Chats</span>
							  </a>
							</li>
							<li class="navi-item">
                <a  class="navi-link navi-link2">
								<span class="navi-icon">
								  <i class="flaticon2-list-3"></i>
								</span>
								<span class="navi-text">Contactos</span>
							  </a>
							</li>
						  </ul>
						  <!--end::Navigation-->
						</div>
					  </div>
				
					</div>
					<div class="text-center flex-grow-1">
					  <div id="nombre_remitente"  class="text-dark-75 font-weight-bold font-size-h5"></div>
					  <div>
						<span class="label label-dot label-success"></span>
						<span class="font-weight-bold text-muted font-size-sm">Active</span>
					  </div>
					</div>
					<div class="text-right flex-grow-1">
					  <button type="button" class="btn btn-clean btn-sm btn-icon btn-icon-md" data-dismiss="modal">
						<i class="ki ki-close icon-1x"></i>
					  </button>
					</div>
					
					
				  </div>
				  <!--end::Header-->
				  <!--begin::Body-->
				 
				  <div class="card-body " >
					
					<!--begin::Scroll-->
              <div class="scroll scroll-pull" data-height="375" data-mobile-height="300" id="scrollContainer">
                
            
              

                <div id="messages" class="messages"  style="background: #f4ece4;">
              
                </div>
                <!--end::Messages-->
              </div>
					<!--end::Scroll-->
				  </div>
				  <!--end::Body-->
				  <!--begin::Footer-->
				  <div class="card-footer align-items-center">
					<!--begin::Compose-->
					<textarea class="form-control border-0 p-0" id="mensaje" rows="2" placeholder="Escriba mensaje"></textarea>
					<div class="d-flex align-items-center justify-content-between mt-5">
					  <div class="mr-3">
						<a href="#" class="btn btn-clean btn-icon btn-md mr-1">
						  <i class="flaticon2-photograph icon-lg"></i>
						</a>
						<a href="#" class="btn btn-clean btn-icon btn-md">
						  <i class="flaticon2-photo-camera icon-lg"></i>
						</a>
					  </div>
					  <div>
						<a id="enviarMensaje" type="button" class="btn btn-primary btn-md text-uppercase font-weight-bold chat-send py-2 px-6">Enviar</a>
					  </div>
					</div>
					<!--begin::Compose-->
				  </div>
				  <!--end::Footer-->
				</div>
				<!--end::Card-->
			  </div>
			</div>
		  </div>
		  
		  
     
		<!--end::Quick Panel-->
          <div class="topbar-item topbar-item2">
            <div class="btn btn-icon btn-clean btn-lg mr-1" id="" onclick="enviar_link_tuagencia2()" >
                <span class="svg-icon svg-icon-xl svg-icon-primary">
                    <!--begin::Svg Icon | path:assets/media/svg/icons/Layout/Layout-4-blocks.svg-->
                    <span class="svg-icon svg-icon-primary svg-icon-2x"><!--begin::Svg Icon | path:C:\wamp64\www\keenthemes\themes\metronic\theme\html\demo1\dist/../src/media/svg/icons\Communication\Call.svg--><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                      <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                        <title>Renviar Preguia</title>
                          <rect x="0" y="0" width="24" height="24"/>
                          <path d="M12,22 C6.4771525,22 2,17.5228475 2,12 C2,6.4771525 6.4771525,2 12,2 C17.5228475,2 22,6.4771525 22,12 C22,17.5228475 17.5228475,22 12,22 Z M11.613922,13.2130341 C11.1688026,13.6581534 10.4887934,13.7685037 9.92575695,13.4869855 C9.36272054,13.2054673 8.68271128,13.3158176 8.23759191,13.760937 L6.72658218,15.2719467 C6.67169475,15.3268342 6.63034033,15.393747 6.60579393,15.4673862 C6.51847004,15.7293579 6.66005003,16.0125179 6.92202169,16.0998418 L8.27584113,16.5511149 C9.57592638,16.9844767 11.009274,16.6461092 11.9783003,15.6770829 L15.9775173,11.6778659 C16.867756,10.7876271 17.0884566,9.42760861 16.5254202,8.3015358 L15.8928491,7.03639343 C15.8688153,6.98832598 15.8371895,6.9444475 15.7991889,6.90644684 C15.6039267,6.71118469 15.2873442,6.71118469 15.0920821,6.90644684 L13.4995401,8.49898884 C13.0544207,8.94410821 12.9440704,9.62411747 13.2255886,10.1871539 C13.5071068,10.7501903 13.3967565,11.4301996 12.9516371,11.8753189 L11.613922,13.2130341 Z" fill="#000000"/>
                      </g>
                  </svg>
                    <!--end::Svg Icon-->
                </span>
            </div>
          </div>



            <div class="topbar-item topbar-item2">
              <div class="btn btn-icon btn-clean btn-lg mr-1" id="" onclick="llamar_escaneo()" >
                  <span class="svg-icon svg-icon-xl svg-icon-primary">
                      <!--begin::Svg Icon | path:assets/media/svg/icons/Layout/Layout-4-blocks.svg-->
                      <span class="svg-icon svg-icon-primary svg-icon-2x"><!--begin::Svg Icon | path:C:\wamp64\www\keenthemes\themes\metronic\theme\html\demo1\dist/../src/media/svg/icons\Shopping\Barcode-scan.svg--><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="24px" height="24px" viewBox="0 0 24 24" version="1.1">
                        <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                           
                          <title>Escanea Guia</title>
                          <rect x="0" y="0" width="24" height="24"/>
                            <path d="M15,9 L13,9 L13,5 L15,5 L15,9 Z M15,15 L15,20 L13,20 L13,15 L15,15 Z M5,9 L2,9 L2,6 C2,5.44771525 2.44771525,5 3,5 L5,5 L5,9 Z M5,15 L5,20 L3,20 C2.44771525,20 2,19.5522847 2,19 L2,15 L5,15 Z M18,9 L16,9 L16,5 L18,5 L18,9 Z M18,15 L18,20 L16,20 L16,15 L18,15 Z M22,9 L20,9 L20,5 L21,5 C21.5522847,5 22,5.44771525 22,6 L22,9 Z M22,15 L22,19 C22,19.5522847 21.5522847,20 21,20 L20,20 L20,15 L22,15 Z" fill="#000000"/>
                            <path d="M9,9 L7,9 L7,5 L9,5 L9,9 Z M9,15 L9,20 L7,20 L7,15 L9,15 Z" fill="#000000" opacity="0.3"/>
                            <rect fill="#000000" opacity="0.3" x="0" y="11" width="24" height="2" rx="1"/>
                        </g>
                    </svg>
                      <!--end::Svg Icon-->
                  </span>
              </div>
          </div>

            <div class="topbar-item topbar-item2">
                <div class="btn btn-icon btn-clean btn-lg mr-1" id="kt_quick_panel_toggle">
                    <span class="svg-icon svg-icon-xl svg-icon-primary">
                        <!--begin::Svg Icon | path:assets/media/svg/icons/Layout/Layout-4-blocks.svg-->
                        <svg width="24px" height="24px" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                            <!-- Generator: Sketch 50.2 (55047) - http://www.bohemiancoding.com/sketch -->
                            <title>Buscar Guia</title>
                           
                            <g id="Stockholm-icons-/-General-/-Search" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                <rect id="bound" x="0" y="0" width="24" height="24"></rect>
                                <path d="M14.2928932,16.7071068 C13.9023689,16.3165825 13.9023689,15.6834175 14.2928932,15.2928932 C14.6834175,14.9023689 15.3165825,14.9023689 15.7071068,15.2928932 L19.7071068,19.2928932 C20.0976311,19.6834175 20.0976311,20.3165825 19.7071068,20.7071068 C19.3165825,21.0976311 18.6834175,21.0976311 18.2928932,20.7071068 L14.2928932,16.7071068 Z" id="Path-2" fill="#000000" fill-rule="nonzero" opacity="0.3"></path>
                                <path d="M11,16 C13.7614237,16 16,13.7614237 16,11 C16,8.23857625 13.7614237,6 11,6 C8.23857625,6 6,8.23857625 6,11 C6,13.7614237 8.23857625,16 11,16 Z M11,18 C7.13400675,18 4,14.8659932 4,11 C4,7.13400675 7.13400675,4 11,4 C14.8659932,4 18,7.13400675 18,11 C18,14.8659932 14.8659932,18 11,18 Z" id="Path" fill="#000000" fill-rule="nonzero"></path>
                            </g>
                        </svg>
                        <!--end::Svg Icon-->
                    </span>
                </div>
            </div>
            <!--end::Quick panel-->
            <!--begin::Chat-->
          
      

            <!--end::Chat-->
            <!--begin::Languages-->
            <div class="dropdown">
                <!--begin::Toggle-->
                <div class="topbar-item" data-toggle="dropdown" data-offset="10px,0px">
                    <div class="btn btn-icon btn-clean btn-dropdown btn-lg mr-1">
                        <img class="h-20px w-20px rounded-sm" src="assets/media/svg/flags/226-united-states.svg" alt="" />
                    </div>
                </div>
                <!--end::Toggle-->
                <!--begin::Dropdown-->
                <div class="dropdown-menu p-0 m-0 dropdown-menu-anim-up dropdown-menu-sm dropdown-menu-right">
                    <!--begin::Nav-->
                    <ul class="navi navi-hover py-4">
                        <!--begin::Item-->
                         <!--end::Item-->
                        <!--begin::Item-->
                        <li class="navi-item active">
                            <a href="#" class="navi-link">
                                <span class="symbol symbol-20 mr-3">
                                    <img src="assets/media/svg/flags/128-spain.svg" alt="" />
                                </span>
                                <span class="navi-text">Spanish</span>
                            </a>
                        </li>
                        <!--end::Item-->
                        <!--begin::Item-->
                        <li class="navi-item">
                            <a href="#" class="navi-link">
                                <span class="symbol symbol-20 mr-3">
                                    <img src="assets/media/svg/flags/226-united-states.svg" alt="" />
                                </span>
                                <span class="navi-text">English</span>
                            </a>
                        </li>
                       
                        <li class="navi-item">
                            <a href="#" class="navi-link">
                                <span class="symbol symbol-20 mr-3">
                                    <img src="assets/media/svg/flags/162-germany.svg" alt="" />
                                </span>
                                <span class="navi-text">German</span>
                            </a>
                        </li>
                        <!--end::Item-->
                        <!--begin::Item-->
                        <li class="navi-item">
                            <a href="#" class="navi-link">
                                <span class="symbol symbol-20 mr-3">
                                    <img src="assets/media/svg/flags/063-japan.svg" alt="" />
                                </span>
                                <span class="navi-text">Japanese</span>
                            </a>
                        </li>
                        <!--end::Item-->
                        <!--begin::Item-->
                        <li class="navi-item">
                            <a href="#" class="navi-link">
                                <span class="symbol symbol-20 mr-3">
                                    <img src="assets/media/svg/flags/195-france.svg" alt="" />
                                </span>
                                <span class="navi-text">French</span>
                            </a>
                        </li>
                        <!--end::Item-->
                    </ul>
                    <!--end::Nav-->
                </div>
                <!--end::Dropdown-->
            </div>
            <!--end::Languages-->
            <!--begin::User-->
            <div class="topbar-item">
                <div class="btn btn-icon btn-icon-mobile w-auto btn-clean d-flex align-items-center btn-lg px-2" id="kt_quick_user_toggle">
                    <span class="text-muted font-weight-bold font-size-base d-none d-md-inline mr-1">Hola,</span>
                    <span class="text-dark-50 font-weight-bolder font-size-base d-none d-md-inline mr-3">Admin</span>
                    <span class="symbol symbol-lg-35 symbol-25 symbol-light-success">
                        <span class="symbol-label font-size-h5 font-weight-bold">A</span>
                    </span>
                </div>
            </div>



            <!--end::User-->
        </div>
        <!--end::Topbar-->
    </div>
    <!--end::Container-->
</div>

<div class="modal fade" id="dataModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-xxl modal-dialog-scrollable" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Detalles de Guías</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <button class="btn btn-primary" onclick="exportToPDFX()">Exportar a PDF</button>
        <button class="btn btn-success" onclick="exportToExcel()">Exportar a Excel</button>
        <div class="card-body">
          <table id="kt_datatable" class="table tabla-guias table-hover" >
            <thead>
              <tr>
                <th>Número de Guía</th>
                <th>Remitente</th>
                <th>Destinatario</th>
                <th>Agencia</th>
                <th>Fecha</th>
                <th>Hora</th>
                <th>Monto</th>
                <th>T Recogida</th>
                <th>Status</th>
                <th>Acciones</th>
              </tr>
            </thead>
            <tbody id="table-body">
              <!-- Se llenará dinámicamente con JavaScript -->
            </tbody>
          </table>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
      </div>
    </div>
  </div>
</div>







<div class="modal fade" id="exampleModalScrollable33" tabindex="-1" role="dialog" aria-labelledby="staticBackdrop" aria-hidden="true">
  <div class="modal-dialog modal-dialog-scrollable" role="document">
      <div class="modal-content">
          <div class="modal-header">
              <h5 class="modal-title" id="exampleModalLabel3">Seguimientos y Comentarios a Guias</h5> 
              
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <i aria-hidden="true" class="ki ki-close"></i>
              </button>
          </div>
          <label>Numero de Guia:  </label>
          <form id="guiaForm3">
          <div class="modal-body">
              <div class="card-body">
                
                  <div class="form-group row" >
                      
                      <input type="hidden" value="" id="segui_nro_guia" name="segui_nro_guia">
                      <input type="hidden" id="imagen_segui" name="imagen_segui">
                      
                      <div class="col-12"  >
                          <div  class="input-group" id="" > 
                              <input name="segui_fecha" id="segui_fecha" style="font-size: 1vw;" type="date" class="form-control"   />
                              
                          </div>
                      </div>
                  </div>
                <input type="file" id="file_seguimiento" onchange="handleFileChange2(event)" class="">
                  
                  <div class="form-group row">
                      <label class="col-form-label text-right ">Visualizado</label>
                      <select required="required" id="segui_visual" name="segui_visual" class="form-control">
                        <option  value="Todos">Todos</option>
                        <option value="Administrador">Adminsitrador</option>
                      </select>
                  </div>
                  <div class="form-group row">
                      <label class="col-form-label text-right ">Estado</label>
                      <select required="required" id="segui_estado" name="segui_estado" class="form-control">
                         
                      
                      </select>
                  </div>

                  <div class="form-group">
                      <label for="exampleTextarea">Obeservacion</label>
                      <textarea id="segui_observacion" name="segui_observacion" class="form-control form-control-solid" rows="1"></textarea>
                  </div>
                
                
              </div>
        
              <button id="guardar_seguimiento2" type="submit" class="btn btn-success">Registrar Seguimiento</button>
          </div>
          

        
      </form>
          


      </div>
  </div>
</div>


<div class="modal fade" id="exampleModalScrollable44" tabindex="-1" role="dialog" aria-labelledby="staticBackdrop" aria-hidden="true">
  <div class="modal-dialog modal-xl modal-dialog-scrollable" role="document">
      <div class="modal-content">
          <div class="modal-header">
              <h5 class="modal-title" id="exampleModalLabel3">Seguimientos y Comentarios a Guias</h5> 
              
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <i aria-hidden="true" class="ki ki-close"></i>
              </button>
          </div>
         
         

          <div class="table-responsive" style="max-height: 280px; overflow-y: auto; padding: 20px; border: #21223b;">
            <table class="table table-striped table-hover align-middle mb-0 shadow-sm rounded bg-white">
              <thead class="thead-dark">
                  <tr>
                    <th class="fecha-red">Hora</th>
                    <th class="fecha-red">Fecha</th>
                      <th class="usuario-bold">Usuarios</th>
                      <th class="estado-normal">Estado</th>
                      
                      <th class="fecha-red">Adjunto</th>
                      <th class="fecha-red">Observacion</th>
                      
                      
                  </tr>
              </thead>
              <tbody id="seguiTable">
                  <!-- Aquí se agregarán las filas dinámicamente -->
              </tbody>
          </table>
        </div>
        <span style="font-size: 1.4em; padding: 20px;" id="elaboracion_guia">
         
        </span>
      </div>
  </div>
</div>


<div class="modal fade " id="selectDateModalX23" tabindex="-1" role="dialog" aria-labelledby="selectDateModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-expanded" role="">
      <div class="modal-content" style="height: 600px;">
          <div class="modal-header">
              <h1 class="modal-title" style="font-size:  28px;" id="selectDateModalLabel">Selecciona la nueva fecha de Recogida</h1>
              <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar">
                  <span aria-hidden="true">&times;</span>
              </button>
          </div>
          
          <div class="modal-body" >
              
                 
                  <div class="form-group row" >
                  
                     
      
                                  <div class="col-12">
                                      <div class="input-group date" id="kt_datetimepicker_1_3x" data-target-input="nearest">
                                          <input id="datetimepicker_input" style="font-size: 28px;" type="text" class="form-control datetimepicker-input" placeholder="Select date & time" data-target="#kt_datetimepicker_1_3x" />
                                          <div class="input-group-append" data-target="#kt_datetimepicker_1_3x" data-toggle="datetimepicker">
                                              <span class="input-group-text">
                                                  <i class="ki ki-calendar"></i>
                                              </span>
                                          </div>
                                      </div>
                                  </div>

                                         <br>
                                            <br>

                                            <div class="col-md-12 my-2 my-md-0">
                                              <label style="font-size: 28px;" class="mr-3 mb-0 d-none d-md-block">
                                                  Cambiar Status de Recogida:</label>
                                              <div class="d-flex align-items-center" col-md-12>
                                                
                                                  <select style="font-size: 18px;" class="form-control" id="origenes-select10">
                                                      
                                                      <option value="Delivery">Delivery</option>
                                                      <option value="Delivery Realizado">Delivery Realizado</option>
                                                      <option value="Pickup">Pickup</option>
                                                      <option value="Pendiente de Pago">Pendiente de Pago</option>
                                                      <option value="Pagado">Pagado</option>
                                                      
                                                      
                                                  </select>
                                              </div>
                                          </div>            
                                            

                                           
                      
                      
                  </div>
                  
              
              
          </div>

          <div class="modal-footer">
              <button style="font-size: 28px;" type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
              <button style="font-size: 28px;" type="button" class="btn btn-primary" id="confirmDateBtn">Confirmar</button>
          </div>
         
      </div>
  </div>
</div>

<div class="modal fade " id="selectDateModal2X23" tabindex="-1" role="dialog" aria-labelledby="selectDateModalLabel2X23" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-expanded" role="">
      <div class="modal-content" style="height: 600px;">
          <div class="modal-header">
              <h1 style="font-size: 2vw;" class="modal-title" id="selectDateModalLabel2X23">Cambiar Lugar de Recogida Paquete</h1>
              <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar">
                  <span aria-hidden="true">&times;</span>
              </button>
          </div>
          

          <div class="modal-footer">
              <button style="font-size: 2vw;" type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
              <button style="font-size: 2vw;" type="button" class="btn btn-primary" id="confirmDateBtn2X23">Confirmar</button>
          </div>
         
      </div>
  </div>
</div>




  <div style="z-index: 8990988;" id="chatnube-container"></div>


<div class="container22 topbar-item2">
  <input type="checkbox" id="btn-mas">
  <div class="redes">
     
      <a  class="icon-xl fas fa-search" id="mi-nuevo-buscador-trigger" title="Buscar"></a>
      <a onclick="llamar_escaneo()"class="icon-xl fas fa-barcode" title="Escanear"></a>
      <a  class="fa fa-phone" onclick="enviar_link_tuagencia2()" title="Renviar Preguia"></a>
  </div>
  <div class="btn-mas">
      <label for="btn-mas" class="fa fa-plus"></label>
  </div>
</div>


<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.0/xlsx.full.min.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.25/jspdf.plugin.autotable.min.js"></script>

<script src="https://cdn.socket.io/4.7.5/socket.io.min.js"></script>

<script src="/assets/js/chat-widget.umd.js"></script>

<script>
let sessionData = {};

function exportToExcel() {
  // Obtener los datos de la tabla
  const table = document.getElementById('kt_datatable'); // ID de la tabla
  const rows = table.querySelectorAll('tbody tr');  // Todas las filas del cuerpo de la tabla

  // Crear un arreglo para almacenar los datos
  const data = [];

  // Agregar los encabezados
  const headers = ['#', 'Número de Guía', 'Fecha', 'Remitente', 'Agencia', 'Monto', 'Estatus'];
  data.push(headers);

  // Variables para la sumatoria de "Monto"
  let contador = 0;
  let totalMonto = 0;

  // Iterar sobre cada fila y extraer los datos
  rows.forEach(row => {
    const cells = row.querySelectorAll('td');

    // Asegúrate de que la fila tenga suficientes celdas
    if (cells.length >= 7) { // Ajustado a 7 celdas
      const guia = cells[0].innerText.trim();       // Número de Guía
      const fecha = cells[4].innerText.trim();      // Fecha
      const remite = cells[1].innerText.trim();     // Remitente
      const agencia = cells[3].innerText.trim();    // Agencia
      const montoText = cells[6].innerText.trim();  // Monto
      const status = cells[7].innerText.trim();      // Estatus

      const monto = parseFloat(montoText.replace(/[^0-9.-]+/g, "")) || 0; // Convertir a número

      contador++;
      totalMonto += monto;

      // Añadir los datos a la matriz
      data.push([contador, guia, fecha, remite, agencia, monto, status]);
    }
  });

  // Agregar una fila para la sumatoria total de "Monto"
  data.push(['', '', '', '', 'Total', totalMonto, '']);

  // Crear una hoja de trabajo
  const worksheet = XLSX.utils.aoa_to_sheet(data);

  // Opcional: Establecer el tipo de dato de la columna "Monto" como numérico
  // Asumiendo que la columna "Monto" es la sexta columna (índice 5)
  for (let i = 1; i <= rows.length; i++) { // Empezar desde 1 para omitir encabezados
    const cellAddress = XLSX.utils.encode_cell({ c: 5, r: i }); // Columna F (Monto)
    if (worksheet[cellAddress]) {
      worksheet[cellAddress].t = 'n'; // Tipo numérico
      worksheet[cellAddress].z = '#,##0.00'; // Formato de número con dos decimales
    }
  }

  // Opcional: Formatear la fila de total en negrita
  const totalRow = rows.length + 1; // Última fila
  ['A', 'B', 'C', 'D', 'E', 'F', 'G'].forEach(col => {
    const cellAddress = `${col}${totalRow + 1}`; // +1 para índices 1-based
    if (worksheet[cellAddress]) {
      if (col === 'F') { // Columna Monto
        worksheet[cellAddress].t = 'n';
        worksheet[cellAddress].z = '#,##0.00';
      }
      // Aplicar negrita
      if (!worksheet[cellAddress].s) {
        worksheet[cellAddress].s = {};
      }
      worksheet[cellAddress].s.font = { bold: true };
    }
  });

  // Crear un libro de trabajo y añadir la hoja
  const workbook = XLSX.utils.book_new();
  XLSX.utils.book_append_sheet(workbook, worksheet, 'Reporte de Guías');

  // Generar el archivo Excel y descargarlo
  XLSX.writeFile(workbook, 'Reporte_de_Guias.xlsx');
}


/**
 * Abre un modal para agregar una nota y evidencia fotográfica a una guía.
 * Incluye la solución para que el teclado funcione correctamente en plantillas complejas.
 * @param {string} guiaId - El ID de la guía a la que se le agregará la nota.
 */

/**
     * Muestra un modal para que el usuario suba imágenes de evidencia.
     * @returns {Promise<string[]>} Una Promise con un array de URLs de las imágenes.
     */
     function solicitarYSubirImagenes() {
      return Swal.fire({
          title: 'Agregar Evidencia Fotográfica',
          html: `
              <p>Toma o selecciona las fotos necesarias.</p>
              <button type="button" class="btn btn-primary" id="btnElegirFotos">
                  <i class="fas fa-camera"></i> Seleccionar/Tomar Fotos
              </button>
              <input type="file" id="evidencia_files" multiple accept="image/*" style="display: none;">
              <div id="image_previews" class="mt-3" style="display: flex; flex-wrap: wrap; gap: 10px; justify-content: center;"></div>
          `,
          confirmButtonText: 'Confirmar y Enviar',
          showCancelButton: true,
          cancelButtonText: 'Omitir Fotos',
          allowOutsideClick: false,
          didOpen: () => {
              // Trigger botón para abrir file input
              $('#btnElegirFotos').on('click', () => {
                  $('#evidencia_files').click();
              });
              // Preview al seleccionar
              $('#evidencia_files').on('change', function () {
                  previsualizarImagenes(this);
              });
          },
          preConfirm: async () => {
              const fileInput = document.getElementById('evidencia_files');
              if (!fileInput.files.length) return [];

              Swal.showLoading();
              try {
                  // Subir cada imagen secuencialmente (más seguro en móviles)
                  let urls = [];
                  for (let file of fileInput.files) {
                      // Opcional: Puedes comprimir imagen aquí antes de subir
                      let url = await subirUnaImagen(file);
                      urls.push(url);
                  }
                  return urls;
              } catch (e) {
                  Swal.showValidationMessage("Falló la subida de una imagen. " + e);
                  return null;
              }
          }
      }).then(result => {
          return (result.isConfirmed && result.value) ? result.value : [];
      });
}


/**
     * Sube un único archivo al servidor.
     * @param {File} file - El archivo a subir.
     * @returns {Promise<string>} La URL del archivo subido.
     */
 // Modifica esta función para que acepte el ID del contenedor de previsualización
 function previsualizarImagenes(input, previewContainerId) {
    const previewContainer = document.getElementById(previewContainerId);
    previewContainer.innerHTML = '';
    if (input.files) {
        Array.from(input.files).forEach(file => {
            const reader = new FileReader();
            reader.onload = function(e) {
                const img = document.createElement('img');
                img.src = e.target.result;
                img.style.width = '80px';
                img.style.height = '80px';
                img.style.objectFit = 'cover';
                img.style.borderRadius = '5px';
                previewContainer.appendChild(img);
            }
            reader.readAsDataURL(file);
        });
    }
}


function subirUnaImagen(file) {
    console.log("Simulando subida de:", file.name);
    return new Promise(resolve => {
        setTimeout(() => {
            // Devuelve una URL falsa para la prueba
            resolve(`https://ruta.falsa/imagen/${file.name}`); 
        }, 500);
    });
}

function exportToPDFX() {
  const { jsPDF } = window.jspdf;

  // Crear un nuevo documento PDF
  const doc = new jsPDF();

  // Agregar un encabezado en la parte superior
  doc.setFontSize(18);
  doc.text('Reporte de Guías', 14, 22);  // Texto en posición (x=14, y=22)

  // Agregar un subtítulo debajo del encabezado
  doc.setFontSize(12);
  doc.text('Lista de Guías Procesadas', 14, 30);
  doc.setFontSize(10);
  doc.text('Reporte generado el: ' + new Date().toLocaleDateString(), 14, 36);

  // Obtener los datos de la tabla (filas)
  const table = document.getElementById('kt_datatable'); // ID de la tabla
  const rows = table.querySelectorAll('tbody tr');  // Todas las filas del cuerpo de la tabla

  // Encabezados de la tabla
  const head = [['#', 'Número de Guía', 'Fecha', 'Remitente', 'Agencia', 'Monto', 'Estatus']];

  // Iterar sobre cada fila y extraer los datos
  const body = [];
  let contador = 0;
  let totalMonto = 0; // Variable para acumular la sumatoria de "Monto"

  rows.forEach(row => {
    const cells = row.querySelectorAll('td');

    // Asegúrate de que la fila tenga suficientes celdas
    if (cells.length >= 7) { // Ajustado a 7 celdas
      const guia = cells[0].innerText.trim();       // Número de Guía
      const fecha = cells[4].innerText.trim();      // Fecha
      const remite = cells[1].innerText.trim();     // Remitente
      const agencia = cells[3].innerText.trim();    // Agencia
      const montoText = cells[6].innerText.trim();  // Monto
      const status = cells[7].innerText.trim();      // Estatus

      const monto = parseFloat(montoText.replace(/[^0-9.-]+/g, "")) || 0; // Convertir a número

      contador++;
      totalMonto += monto;

      // Añadir los datos a la tabla
      body.push([contador, guia, fecha, remite, agencia, monto, status]);
    }
  });

  // Añadir una fila para la sumatoria total de "Monto"
  const totalRow = ['', '', '', '', 'Total', totalMonto.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }), ''];
  body.push(totalRow);

  // Ajustar la posición de la tabla para no sobreponerla con el encabezado
  doc.autoTable({
    startY: 50,  // Iniciar la tabla un poco más abajo
    head: head,  // Encabezados de la tabla
    body: body,  // Cuerpo de la tabla
    styles: {
      fontSize: 8  // Reducir el tamaño de la fuente a 8
    },
    didDrawCell: (data) => {
      // Aplicar estilo de negrita a la fila de total
      if (data.row.index === body.length - 1) { // Última fila
        data.cell.styles.fontStyle = 'bold';
        data.cell.styles.fillColor = [211, 211, 211]; // Opcional: Color de fondo para la fila de total
      }
    }
  });

  // Obtener el número total de páginas
  const totalPages = doc.getNumberOfPages();

  // Agregar la sumatoria al pie de la última página
  doc.setPage(totalPages);
  const pageHeight = doc.internal.pageSize.height || doc.internal.pageSize.getHeight();
  doc.setFont('helvetica', 'bold');
 // doc.text('Total Monto: ' + totalMonto.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 }), 14, pageHeight - 100);


  // Mostrar el PDF en una nueva ventana/pestaña
  doc.output('dataurlnewwindow');
}


function enviar_link_tuagencia2() {
        // Generar el enlace con los datos de la agencia
        const url = `/tuagencia3`;
        
        // Redirigir a la URL generada
        window.location.href = url;
   }

   function llamar_escaneo() {
        // Generar el enlace con los datos de la agencia
        const url = `/scaneo`;
        
        // Redirigir a la URL generada
        window.location.href = url;
   }


    


// Evento para manejar la búsqueda cuando se hace clic en el botón de "Buscar"
    
async function cargar_movimiento(nro_guia){

  $('#exampleModalScrollable33').css('z-index', '1055');
  $('#exampleModalScrollable33').modal('show');
  document.getElementById("segui_nro_guia").value= nro_guia     
  
} 

async function cargar_movimiento2(nroGuia, elaborado_por){
  document.getElementById('elaboracion_guia').innerHTML=""
$('#exampleModalScrollable44').css('z-index', '1055');
$('#exampleModalScrollable44').modal('show');
document.getElementById('elaboracion_guia').innerHTML= elaborado_por

$.ajax({
        url: '/buscar_seguimientos',
        type: 'POST',
        data: { nro_guia: nroGuia },
        success: function(response) {
            const tbody = document.getElementById('seguiTable'); // Asegúrate de que este ID exista en tu tabla
            tbody.innerHTML = ''; // Limpia el contenido anterior en caso de que ya exista
            console.log(response)


            response.forEach((seguimiento, index) => {
            if (seguimiento.estado?.tipo!== 'Nota'){ 
           
              // Formatear la fecha y la hora desde createdAt
            const fechaObj = new Date(seguimiento.createdAt);
            const fechaFormateada = fechaObj.toLocaleDateString();

            // Formatear la hora en formato de 12 horas AM/PM
            let horas = fechaObj.getHours();
            const minutos = fechaObj.getMinutes().toString().padStart(2, '0');
            const amPm = horas >= 12 ? 'PM' : 'AM';
            horas = horas % 12 || 12; // Convertir a formato de 12 horas
            const horaFormateada = `${horas}:${minutos} ${amPm}`;
    

            const imagenesArray = normalizarImagenesAArray(seguimiento.imagen);
            const linksHtml = imagenesArray.length > 0
                ? imagenesArray.map((url, index) => {
                    // Para cada URL en el array, creamos un enlace <a>
                    // Usamos 'index + 1' para enumerarlos (Archivo 1, Archivo 2, etc.)
                    return `
                        <a href="${url}" target="_blank" rel="noopener noreferrer">
                            <i class="fa fa-download"></i> Ver Archivo ${index + 1}
                        </a>
                    `;
                }).join('<br>') // Une todos los enlaces generados, separados por un salto de línea
                : 'No disponible'; // Texto a mostrar si el array está vacío
            


            // Crear la fila con la fecha y la hora formateadas
            const row = `<tr>
              <td>${horaFormateada}</td>
              <td>${fechaFormateada}</td>
                <td>${seguimiento.usuario.name}</td>
                <td>${seguimiento.estado.nombre}</td>
              
               <td>
                 ${linksHtml}
                </td>
                <td>${seguimiento.observacion}</td>
            </tr>`;

            tbody.insertAdjacentHTML('beforeend', row);

          }   

        });

      




        },
        error: function(error) {
            console.error("Error al obtener los seguimientos:", error);
        }
    });

  
} 


function normalizarImagenesAArray(data) {
    // Si no hay datos, devuelve un array vacío
    if (!data) {
        return [];
    }

    // Si ya es un array, devuélvelo tal cual
    if (Array.isArray(data)) {
        return data;
    }

    // Si es un string, procesémoslo
    if (typeof data === 'string') {
        // Si contiene comas, es una lista. La separamos y limpiamos espacios.
        if (data.includes(',')) {
            return data.split(',').map(url => url.trim());
        }
        // Si es un string sin comas, es una sola URL. La metemos en un array.
        return [data];
    }

    // Como fallback, devuelve un array vacío
    return [];
}        

function handleFileChange2(event) {
  const file = event.target.files[0];
  if (!file) return;

  const formData = new FormData();
  // La clave 'file' coincide con `upload.single('file')`
  formData.append('file', file);

  fetch('/guardar-comprobante', {
    method: 'POST',
    body: formData // Sin content-type manual
  })
    .then(response => response.json())
    .then(data => {
      if (data.success) {


        let imagen_nueva = data.fileUrl; 
              console.log(imagen_nueva)
              document.getElementById('imagen_segui').value = imagen_nueva;

      } else {
        console.error('Error al subir la imagen:', data.message);
      }
    })
    .catch(error => {
      console.error('Error en la solicitud de subida:', error);
    });
}


function formatearFechaHora(fecha) {
    const fechaObj = new Date(fecha);
    const fechaFormateada = fechaObj.toLocaleDateString();
    let horas = fechaObj.getHours();
    const minutos = fechaObj.getMinutes().toString().padStart(2, '0');
    const amPm = horas >= 12 ? 'PM' : 'AM';
    horas = horas % 12 || 12;
    return { fechaFormateada, horaFormateada: `${horas}:${minutos} ${amPm}` };
}

  
function renderGuiaRow(guia) {
  let fecha = new Date(guia.fecha);
  let opciones = { 
      timeZone: 'America/New_York', 
      year: 'numeric', 
      month: '2-digit', 
      day: '2-digit'
  };
  let fechaNuevaYork = new Intl.DateTimeFormat('en-US', opciones).format(fecha);
  let [month, day, year] = fechaNuevaYork.split('/');
  let formattedDate = `${year}-${month}-${day}`;
  let { horaFormateada } = formatearFechaHora(guia.fecha) || {horaFormateada: ''};
  let elaborado_por = `Guia ${guia.nro_guia} creada por ${guia.usuario?.nombre || ''} en agencia ${guia.agencia?.NOMBRE || ''} el ${formattedDate}`;
  return `
    <tr class="guia-row">
      <td data-label="Número de Guía">
        <a href="/factura_guia/${guia.nro_guia}" target="_blank" style="text-decoration: underline; color: #007bff;">
          ${guia.nro_guia}
        </a>
      </td>
      <td data-label="Remitente">
        <a href="/factura_guia/${guia.nro_guia}" target="_blank">
          ${guia.nom_cliente_remite}
        </a>
      </td>
      <td data-label="Destinatario">
        <a href="/factura_guia/${guia.nro_guia}" target="_blank">
          ${guia.nom_cliente_destina}
        </a>
      </td>
      <td data-label="Agencia">
        <a href="/factura_guia/${guia.nro_guia}" target="_blank">
          ${guia.agencia ? guia.agencia.NOMBRE : 'N/A'}
        </a>
      </td>
      <td data-label="Fecha">${formattedDate}</td>
      <td data-label="Hora">${horaFormateada || ''}</td>
      <td data-label="Monto">${guia.total_fac}</td>
      <td data-label="T Recogida">${guia.tipo_contenido}</td>
      <td data-label="Status">${obtenerDescripcionStatus(guia.status)}</td>
      <td data-label="Acciones">
        <a href="/editar_guia/${guia.nro_guia}" class="btn btn-sm btn-clean btn-icon mr-2" title="Editar Guia">
          <i class="icon-2x text-dark-50 flaticon-edit"></i>
        </a>

         
        <a href="/factura_guia/${guia.nro_guia}" target="_blank" class="btn btn-sm btn-clean btn-icon mr-2" title="Ver Guia">
          <i class="icon-2x text-dark-50 flaticon-interface-11"></i>
        </a>
        
        <a style="cursor: pointer;" onclick="cargar_movimiento('${guia.nro_guia}')" class="btn btn-sm btn-clean btn-icon" title="Nuevo Seguimiento">
          <i class="icon-2x text-dark-50 flaticon-edit-1"></i>
        </a>
        <a style="cursor: pointer;" onclick="cargar_movimiento2('${guia.nro_guia}', '${elaborado_por}')" class="btn btn-sm btn-clean btn-icon" title="Ver Seguimientos">
          <i class="icon-2x text-dark-50 flaticon2-list-1"></i>
        </a>
        


        ${(guia.status === "0" || guia.status === "1") ?

          `
          <a style="cursor: pointer;"
                        class="btn btn-sm btn-clean btn-icon" 
                        title="Cambiar Lugar de Recogida" 
                        data-toggle="modal" 
                        data-target="#selectDateModal2X23" 
                        data-id="${guia._id}" 
                        data-direccion="${guia.direccion_remite || 'Dirección desconocida'}" 
                        data-tipo_contenido="${guia.tipo_contenido}" 
                        data-ciudad="${guia.ciudad_remite?.[0]?.name || 'Ciudad desconocida'}" 
                        data-estado="${guia.estado_remite?.[0]?.name || 'Estado desconocido'}" 
                        data-pais="${guia.pais_remite?.[0]?.name || 'País desconocido'}" 
                        data-zip="${guia.zip_remite || 'Sin ZIP'}" 
                        data-lugar="${guia.lugar_recogida || 'Lugar no definido'}" 
                        data-agencia='${JSON.stringify(guia.agencia).replace(/'/g, "&apos;")}'>
                        <i class="icon-2x text-dark-50 flaticon2-map"></i>
                      </a>
                          <a style="cursor: pointer;" class="btn btn-sm btn-clean btn-icon" title="Cambiar Fecha de Recogida" 
                            data-toggle="modal" 
                            data-target="#selectDateModalX23" 
                            data-id="${guia._id}" 
                            data-direccion="${guia.direccion_remite || 'Dirección desconocida'}" 
                            data-tipo_contenido="${guia.tipo_contenido}" 
                            data-ciudad="${guia.ciudad_remite?.[0]?.name || 'Ciudad desconocida'}" 
                            data-estado="${guia.estado_remite?.[0]?.name || 'Estado desconocido'}" 
                            data-pais="${guia.pais_remite?.[0]?.name || 'País desconocido'}" 
                            data-zip="${guia.zip_remite || 'Sin ZIP'}" 
                            data-dias_ruta="${guia.rutaInfo || 'Sin información de ruta'}" 
                            data-lugar="${guia.lugar_recogida || 'Lugar no definido'}" 
                            data-agencia='${JSON.stringify(guia.agencia).replace(/'/g, "&apos;")}'>
                            <i class="icon-2x text-dark-50 flaticon-event-calendar-symbol"></i>
                          </a>
          
          <a style="cursor: pointer;" 
            class="btn btn-sm btn-clean btn-icon btn-anular" 
            title="Anular Guía" 
            data-id="${guia._id}">
              <span class="svg-icon svg-icon-md">
                <i class="icon-2x text-danger flaticon-cancel"></i>
              </span>
            </a>` : ''
        }
      </td>
    </tr>
  `;
}


document.querySelector('.btn-success1').addEventListener('click', function (event) {
    event.preventDefault();

    Swal.fire({
        title: 'Cargando...',
        text: 'Por favor espera mientras obtenemos la información.',
        allowOutsideClick: false,
        didOpen: () => { Swal.showLoading(); }
    });

    // Inputs de búsqueda general:
    let rawValue = document.querySelector('#nro_Guia_1').value || null;
    if (rawValue && rawValue.includes('/')) {
      rawValue = rawValue.split('/')[0].trim();
    }
    const nroGuia = rawValue;
    let agencia = document.querySelector('#kt_select2_1-10').value || null;
    const fechaDesde = document.querySelector('#kt_datetimepicker_2 input').value;
    const fechaHasta = document.querySelector('#kt_datetimepicker_3 input').value;
    const ref1 = document.querySelector('#referencia1').value || null;
    const ref2 = document.querySelector('#referencia2').value || null;
    const pais1 = document.querySelector('#kt_select2_1-11').value || null;
    const status = document.querySelector('#kt_select2_1-12').value || null;
    const estado = document.querySelector('#kt_select2_1-1x').value || null;
    const ciudad = document.querySelector('#kt_select2_1-1x2').value || null;

    // Ajustar agencia si no es perfil 1/2/0
    if (sessionData.perfil !== 1 && sessionData.perfil !== 2 && sessionData.perfil !== 0 && sessionData.perfil !== 6) {
        agencia = sessionData.agencia;
    }

    const searchParams = {
        nroGuia,
        agencia,
        fechaDesde,
        fechaHasta,
        ref1,
        ref2,
        pais1,
        status,
        estado,
        ciudad
    };

    fetch('/lista_rutas_todas', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(searchParams)
    })
    .then(response => response.json())
    .then(data => renderTablaGuias(data))
    .catch(showError);
});


document.querySelector('.btn-success2').addEventListener('click', function (event) {
    event.preventDefault();

    Swal.fire({
        title: 'Cargando...',
        text: 'Por favor espera mientras obtenemos la información.',
        allowOutsideClick: false,
        didOpen: () => { Swal.showLoading(); }
    });

    const celular_3 = document.querySelector('#celular_1').value;
    const nombre_3 = document.querySelector('#nombre_2').value;
    const fechaDesde = document.querySelector('#kt_datetimepicker_5 input').value;
    const fechaHasta = document.querySelector('#kt_datetimepicker_6 input').value;
    const pais2 = document.querySelector('#kt_select2_1-13').value || null;
    const estado = document.querySelector('#kt_select2_1-13y').value || null;
    const ciudad = document.querySelector('#kt_select2_1-13y2').value || null;
    const status = document.querySelector('#kt_select2_1-22').value || null;

    const searchParams = {
        celular_1: celular_3,
        nombre_1: nombre_3,
        fechaDesde,
        fechaHasta,
        pais2,
        status,
        estado,
        ciudad
    };

    fetch('/lista_rutas_todas2', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(searchParams)
    })
    .then(response => response.json())
    .then(data => renderTablaGuias(data))
    .catch(showError);
});

document.querySelector('.btn-success3').addEventListener('click', function (event) {
    event.preventDefault();

    Swal.fire({
        title: 'Cargando...',
        text: 'Por favor espera mientras obtenemos la información3.',
        allowOutsideClick: false,
        didOpen: () => { Swal.showLoading(); }
    });

    const celular_3 = document.querySelector('#celular_3').value;
    const nombre_3 = document.querySelector('#nombre_3').value;
    const fechaDesde = document.querySelector('#kt_datetimepicker_6 input').value;
    const fechaHasta = document.querySelector('#kt_datetimepicker_7 input').value;
    const pais3 = document.querySelector('#kt_select2_1-14').value || null;
    const status = document.querySelector('#kt_select2_1-32').value || null;
    const estado = document.querySelector('#kt_select2_1-14y').value || null;
    const ciudad = document.querySelector('#kt_select2_1-14y2').value || null;

    const searchParams = {
        celular_1: celular_3,
        nombre_1: nombre_3,
        fechaDesde,
        fechaHasta,
        pais3,
        status,
        estado,
        ciudad
    };

    fetch('/lista_rutas_todas3', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(searchParams)
    })
    .then(response => response.json())
    .then(data => renderTablaGuias(data))
    .catch(showError);
});



document.querySelector('.btn-success4').addEventListener('click', function (event) {
    event.preventDefault();

    Swal.fire({
        title: 'Cargando...',
        text: 'Por favor espera mientras obtenemos la información4.',
        allowOutsideClick: false,
        didOpen: () => { Swal.showLoading(); }
    });

    const cr = document.querySelector('#cr').value;

    const searchParams = { cr };

    fetch('/lista_rutas_todas4', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(searchParams)
    })
    .then(response => response.json())
    .then(data => renderTablaGuias(data))
    .catch(showError);
});


function renderTablaGuias(data) {
  Swal.close();
  const tableBody = document.getElementById('table-body');
  tableBody.innerHTML = '';
  const { guias } = data;
  if (!guias || guias.length === 0) {
      Swal.fire({
          icon: 'info',
          title: 'Sin resultados',
          text: 'No se encontraron guías en el rango de fechas seleccionado.',
      });
      return;
  }
  let html = '';
  guias.forEach(guia => { html += renderGuiaRow(guia); });
  tableBody.innerHTML = html;
  $('#dataModal').modal('show');
}



function showError(error) {
  Swal.close();
  Swal.fire({
      icon: 'error',
      title: 'Oops...',
      text: 'Hubo un error al obtener los datos. Inténtalo nuevamente más tarde.',
  });
  console.error('Error al hacer la solicitud:', error);
}




document.getElementById('kt_select2_1-11').addEventListener('change', async function() {
 
  const countryId = this.value;

  try {
    const response = await fetch(`/states/${countryId}`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json'
      }
    });

    const data = await response.json(); // Si esperas una respuesta JSON
    const citySelect = document.getElementById('kt_select2_1-1x');
    citySelect.innerHTML = ''; // Limpiar opciones anteriores

    // Agregar opción por defecto
    const defaultOption = document.createElement('option');
    defaultOption.value = '';
    defaultOption.text = 'Seleccione una ciudad';
    citySelect.appendChild(defaultOption);

    // Insertar las nuevas opciones
    data.forEach(city => {
      const option = document.createElement('option');
      option.value = city.id;
      option.text = city.name;
      citySelect.appendChild(option);
    });



  } catch (error) {
    console.error('Error al obtener las ciudades:', error);
  }
});




document.getElementById('kt_select2_1-1x').addEventListener('change', async function() {
 
 const countryId = this.value;

 try {
   const response = await fetch(`/cities/${countryId}`, {
     method: 'GET',
     headers: {
       'Content-Type': 'application/json'
     }
   });

   const data = await response.json(); // Si esperas una respuesta JSON
   const citySelect = document.getElementById('kt_select2_1-1x2');
   citySelect.innerHTML = ''; // Limpiar opciones anteriores

   // Agregar opción por defecto
   const defaultOption = document.createElement('option');
   defaultOption.value = '';
   defaultOption.text = 'Seleccione una ciudad';
   citySelect.appendChild(defaultOption);

   // Insertar las nuevas opciones
   data.forEach(city => {
     const option = document.createElement('option');
     option.value = city.id;
     option.text = city.name;
     citySelect.appendChild(option);
   });



 } catch (error) {
   console.error('Error al obtener las ciudades:', error);
 }
});



document.getElementById('kt_select2_1-13').addEventListener('change', async function() {
 
 const countryId = this.value;

 try {
   const response = await fetch(`/states/${countryId}`, {
     method: 'GET',
     headers: {
       'Content-Type': 'application/json'
     }
   });

   const data = await response.json(); // Si esperas una respuesta JSON
   const citySelect = document.getElementById('kt_select2_1-13y');
   citySelect.innerHTML = ''; // Limpiar opciones anteriores

   // Agregar opción por defecto
   const defaultOption = document.createElement('option');
   defaultOption.value = '';
   defaultOption.text = 'Seleccione una ciudad';
   citySelect.appendChild(defaultOption);

   // Insertar las nuevas opciones
   data.forEach(city => {
     const option = document.createElement('option');
     option.value = city.id;
     option.text = city.name;
     citySelect.appendChild(option);
   });



 } catch (error) {
   console.error('Error al obtener las ciudades:', error);
 }
});




document.getElementById('kt_select2_1-13y').addEventListener('change', async function() {

const countryId = this.value;

try {
  const response = await fetch(`/cities/${countryId}`, {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json'
    }
  });

  const data = await response.json(); // Si esperas una respuesta JSON
  const citySelect = document.getElementById('kt_select2_1-13y2');
  citySelect.innerHTML = ''; // Limpiar opciones anteriores

  // Agregar opción por defecto
  const defaultOption = document.createElement('option');
  defaultOption.value = '';
  defaultOption.text = 'Seleccione una ciudad';
  citySelect.appendChild(defaultOption);

  // Insertar las nuevas opciones
  data.forEach(city => {
    const option = document.createElement('option');
    option.value = city.id;
    option.text = city.name;
    citySelect.appendChild(option);
  });



} catch (error) {
  console.error('Error al obtener las ciudades:', error);
}
});



document.getElementById('kt_select2_1-14').addEventListener('change', async function() {
 
 const countryId = this.value;

 try {
   const response = await fetch(`/states/${countryId}`, {
     method: 'GET',
     headers: {
       'Content-Type': 'application/json'
     }
   });

   const data = await response.json(); // Si esperas una respuesta JSON
   const citySelect = document.getElementById('kt_select2_1-14y');
   citySelect.innerHTML = ''; // Limpiar opciones anteriores

   // Agregar opción por defecto
   const defaultOption = document.createElement('option');
   defaultOption.value = '';
   defaultOption.text = 'Seleccione una ciudad';
   citySelect.appendChild(defaultOption);

   // Insertar las nuevas opciones
   data.forEach(city => {
     const option = document.createElement('option');
     option.value = city.id;
     option.text = city.name;
     citySelect.appendChild(option);
   });



 } catch (error) {
   console.error('Error al obtener las ciudades:', error);
 }
});




document.getElementById('kt_select2_1-14y').addEventListener('change', async function() {

const countryId = this.value;

try {
  const response = await fetch(`/cities/${countryId}`, {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json'
    }
  });

  const data = await response.json(); // Si esperas una respuesta JSON
  const citySelect = document.getElementById('kt_select2_1-14y2');
  citySelect.innerHTML = ''; // Limpiar opciones anteriores

  // Agregar opción por defecto
  const defaultOption = document.createElement('option');
  defaultOption.value = '';
  defaultOption.text = 'Seleccione una ciudad';
  citySelect.appendChild(defaultOption);

  // Insertar las nuevas opciones
  data.forEach(city => {
    const option = document.createElement('option');
    option.value = city.id;
    option.text = city.name;
    citySelect.appendChild(option);
  });



} catch (error) {
  console.error('Error al obtener las ciudades:', error);
}
});


    // Evento para el botón de cancelar
    document.querySelector('.btn-secondary').addEventListener('click', function (event) {
        event.preventDefault();
        // Aquí puedes limpiar los campos o manejar el comportamiento de cancelar
        document.querySelector('#nro_Guia_1').value = '';
        document.querySelector('#kt_select2_1-10').value = '';
        document.querySelector('#kt_datetimepicker_2 input').value = '';
        document.querySelector('#kt_datetimepicker_3 input').value = '';
       // document.querySelector('#kt_money_input_usa3').value = '';
    });


    function obtenerDescripcionStatus(status) {
  switch(status) {
    case "-1":
      return "Por LLevar a agencia";
    case "1":
      return "Espera de Conductor";
    case "2":
      return "En Transito Local";
    case "2-2":
      return "En Trailer";
    case "3":
      return "En Transito Cedis";
    case "4":
      return "En Cedis";
    case "5":
      return "En Container Fisico";
    case "6":
      return "En Bodega Para Su Distribucion";
    case "7":
      return "En Transito Destino";
    case "8":
      return "Anulada";
    case "10":
      return "1 Transito Aduana De Destino";
    case "11":
      return "1-Recibida En Frontera Mx";
    case "12":
      return "2 Tramites Aduanales";
    case "12-2":
      return "2 Tramites Aduanales Escala HND";
    case "13":
      return "3 Revision Aduanal";
    case "14":
      return "4 En Bodega Para Su Distribucion";
    case "15":
      return "5 En Proceso De Entrega";
    case "16":
      return "6 Entregado";
      case "17":
      return "Entrega Notificada";
    default:
      return "Estado desconocido";  // Para cualquier otro valor no previsto
  }
}

  document.addEventListener('DOMContentLoaded', function () {
    let eldestinatario = ""; 
    let nombre_destinatario="";
    let updateInterval;
    let mensaje_nuevo = false;
    const inputFecha = document.getElementById("segui_fecha");
        const hoy = new Date().toISOString().split("T")[0]; // Obtiene la fecha de hoy en formato YYYY-MM-DD
        inputFecha.value = hoy; 
   // loadContacts();

   console.log('<%= session.datos_permi.correo %>')


   var perfil = <%- JSON.stringify(session.datos_permi.perfil) %>;


  if ([0, 1, 2].includes(perfil)) {
     ChatNubeWidget.init({
        containerId: 'chatnube-container',
            // --- Estos valores deben ser generados por el backend de tu cliente ---
            widgetKey: 'a1b2c3d4-e5f6-7890-g1h2-i3j4k5l6m7n8',
            companyId: '682a4b4680b9a4fb4091dbe3',
         
            userId: '<%= session.datos_permi.correo %>', 
            userName: '<%= session.datos_permi.name %>',
            companyName: 'Tu Caja Express',
            // --- URLs de tu servidor ---
           apiBaseUrl: 'https://chatnube.com/api/v1',
            socketUrl:  'https://chatnube.com'
        });

    }   

   $('#nro_Guia_1').on('keypress', function (e) {
    console.log('hola')
          if (e.which === 13) { // 13 es el código de la tecla Enter
              e.preventDefault(); // Evita que el formulario se envíe automáticamente
              $('.btn-success1').click(); // Simula un clic en el botón de búsqueda
          }
      }); 

      
      $('#referencia1').on('keypress', function (e) {
    console.log('hola')
          if (e.which === 13) { // 13 es el código de la tecla Enter
              e.preventDefault(); // Evita que el formulario se envíe automáticamente
              $('.btn-success1').click(); // Simula un clic en el botón de búsqueda
          }
      });    

      $('#referencia2').on('keypress', function (e) {
    console.log('hola')
          if (e.which === 13) { // 13 es el código de la tecla Enter
              e.preventDefault(); // Evita que el formulario se envíe automáticamente
              $('.btn-success1').click(); // Simula un clic en el botón de búsqueda
          }
      });    



      $('#nombre_2').on('keypress', function (e) {
    console.log('hola')
          if (e.which === 13) { // 13 es el código de la tecla Enter
              e.preventDefault(); // Evita que el formulario se envíe automáticamente
              $('.btn-success2').click(); // Simula un clic en el botón de búsqueda
          }
      });    

      $('#celular_1').on('keypress', function (e) {
    console.log('hola')
          if (e.which === 13) { // 13 es el código de la tecla Enter
              e.preventDefault(); // Evita que el formulario se envíe automáticamente
              $('.btn-success2').click(); // Simula un clic en el botón de búsqueda
          }
      });    


      $('#celular_3').on('keypress', function (e) {
    console.log('hola')
          if (e.which === 13) { // 13 es el código de la tecla Enter
              e.preventDefault(); // Evita que el formulario se envíe automáticamente
              $('.btn-success3').click(); // Simula un clic en el botón de búsqueda
          }
      });   

      $('#nombre_3').on('keypress', function (e) {
    console.log('hola')
          if (e.which === 13) { // 13 es el código de la tecla Enter
              e.preventDefault(); // Evita que el formulario se envíe automáticamente
              $('.btn-success3').click(); // Simula un clic en el botón de búsqueda
          }
      });   

      

async function obtenerCoordenadasX23(direccion) {
    console.log("Solicitando coordenadas para:", direccion);
    try {
        const response = await fetch('/geocode', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ direccion })
        });

        const data = await response.json();
        if (data.success) {
            return data.coordenadas;
        } else {
            console.error('Error obteniendo coordenadas:', data.message);
            return null;
        }
    } catch (error) {
        console.error('Error en la solicitud de geocodificación:', error);
        return null;
    }
}


   $('#selectDateModal2X23').on('show.bs.modal', function (event) {
        const button = $(event.relatedTarget); // Botón que activó el modal
        const guiaId = button.data('id'); // Extraer el valor del atributo data-id
        const direccion = button.data('direccion');
        const ciudad = button.data('ciudad');
        const estado = button.data('estado');
        const pais = button.data('pais');
        const zip = button.data('zip');
        const agencia = button.data('agencia');
    
        const lugar = button.data('lugar');


        const confirmButton = $('#confirmDateBtn2X23');
        if (lugar.trim() === 'Agencia') {
            confirmButton.text('Cambiar a Domicilio Cliente');
        } else if (lugar.trim() === 'Domicilio Cliente') {
            confirmButton.text('Cambiar a Agencia');
        }
        

        // Mostrar la información en el modal o asignarla a campos ocultos para su uso
        const modal = $(this);
        modal.find('#confirmDateBtn2X23').data('guia-id', guiaId);

        let direccion_completa = "";
        let nuevo_lugar = "";
       if(lugar==='Agencia'){
        direccion_completa = `${direccion}, ${ciudad}, ${estado}, ${pais}, ${zip}`;
        nuevo_lugar='Domicilio Cliente'
        }else{
        nuevo_lugar='Agencia'
        direccion_completa = `${agencia.DIRECCION}, ${agencia.CIUDAD},  ${agencia.ZIP}`;
        }

        
        modal.find('#confirmDateBtn2X23').data('guia-direccion', direccion_completa);
        modal.find('#confirmDateBtn2X23').data('lugar', nuevo_lugar);
        modal.find('#confirmDateBtn2X23').data('agencia', agencia);
       
    });



  $(document).ready(function() { // Asegúrate que tu listener esté dentro de document.ready o similar
    

     
    // Escucha el evento 'click' en tu nuevo enlace (identificado por su ID)
    $('#mi-nuevo-buscador-trigger').on('click', function(evento) {
        evento.preventDefault(); // Previene la acción por defecto del enlace (navegar a '#')

        // Busca el elemento DIV original (#kt_quick_panel_toggle) por su ID
        var panelOriginal = $('#kt_quick_panel_toggle');

        // Verifica si el DIV original realmente existe en la página
        if (panelOriginal.length > 0) {
            // Simula un clic en el DIV original.
            // Esto disparará cualquier función que esté escuchando el evento 'click'
            // en el DIV con id="kt_quick_panel_toggle".
            panelOriginal.trigger('click');
            console.log('Funcionalidad de #kt_quick_panel_toggle activada desde #mi-nuevo-buscador-trigger.');
        } else {
            console.error('El elemento disparador original #kt_quick_panel_toggle no se encontró en la página.');
        }

        // --- ANEXADO: Lógica para retraer/cerrar el menú de .redes ---
        var btnMasCheckbox = $('#btn-mas'); // Selecciona el checkbox que controla el menú

        if (btnMasCheckbox.length > 0) { // Verifica si el checkbox existe
            // Desmarca el checkbox para cerrar el menú.
            // Al cambiar el estado de 'checked' a false, tus reglas CSS
            // (#btn-mas:checked ~ .redes a y #btn-mas:checked ~ .btn-mas label)
            // dejarán de aplicarse, revirtiendo los estilos y ocultando los enlaces.
            btnMasCheckbox.prop('checked', false);
            console.log('Menú .redes retraído (checkbox #btn-mas desmarcado).');
        } else {
            console.warn('El checkbox #btn-mas no fue encontrado para retraer el menú.');
        }
        // --- FIN DE LA LÓGICA ANEXADA ---
    });


    
    $('.container22 .redes a[title]').hover(function(e) {
        // --- EVENTO MOUSEENTER (cursor entra) ---
        var titleText = $(this).attr('title'); // Obtiene el texto del atributo title

        // Guarda el título original y luego lo elimina para evitar el tooltip nativo
        $(this).data('original-title', titleText).removeAttr('title');

        // Crea el elemento del tooltip
        var $tooltip = $('<div class="custom-tooltip-rojas"></div>')
                       .text(titleText)
                       .appendTo('body'); // Añade el tooltip al body para evitar problemas de posicionamiento con overflow:hidden

        // Calcula la posición del tooltip
        var linkOffset = $(this).offset(); // Posición del enlace
        var linkWidth = $(this).outerWidth(); // Ancho del enlace
        var linkHeight = $(this).outerHeight(); // Alto del enlace (para posicionar abajo si es necesario)

        // Para obtener las dimensiones correctas del tooltip, lo mostramos brevemente oculto,
        // calculamos sus dimensiones, y luego lo ocultamos de nuevo antes de la animación.
        $tooltip.css({ top: 0, left: 0, visibility: 'hidden', display: 'block' });
        var tooltipWidth = $tooltip.outerWidth();
        var tooltipHeight = $tooltip.outerHeight();
        $tooltip.css({ visibility: 'visible', display: 'none' }); // Listo para animar

        // Posicionar el tooltip encima del enlace, centrado horizontalmente
        var topPos = linkOffset.top - tooltipHeight - 7; // 7px de espacio por encima
        var leftPos = linkOffset.left + (linkWidth / 2) - (tooltipWidth / 2);

        // Ajustes básicos para que no se salga de la pantalla visible
        // Si se sale por arriba, lo posiciona abajo
        if (topPos < $(window).scrollTop()) {
            topPos = linkOffset.top + linkHeight + 7; // 7px de espacio por debajo
        }
        // Ajuste si se sale por la izquierda
        if (leftPos < $(window).scrollLeft()) {
            leftPos = $(window).scrollLeft() + 5; // 5px de margen
        }
        // Ajuste si se sale por la derecha
        if (leftPos + tooltipWidth > $(window).scrollLeft() + $(window).width()) {
            leftPos = $(window).scrollLeft() + $(window).width() - tooltipWidth - 5; // 5px de margen
        }

        // Aplica la posición calculada y muestra el tooltip con una animación suave
        $tooltip.css({ top: topPos, left: leftPos }).fadeIn(200);

        // Guarda una referencia al tooltip en el enlace para poder quitarlo después
        $(this).data('tooltip-element', $tooltip);

    }, function() {
        // --- EVENTO MOUSELEAVE (cursor sale) ---
        // Restaura el atributo title original
        var originalTitle = $(this).data('original-title');
        if (originalTitle) {
            $(this).attr('title', originalTitle);
            $(this).removeData('original-title');
        }

        // Obtiene la referencia al tooltip y lo elimina con una animación
        var $tooltip = $(this).data('tooltip-element');
        if ($tooltip) {
            $tooltip.stop(true, true).fadeOut(100, function() {
                $(this).remove();
            });
            $(this).removeData('tooltip-element');
        }
    });

    // Opcional: Si el usuario hace clic en el enlace, también ocultar el tooltip
    // Esto es útil si el clic causa una navegación o acción que debería cerrar el tooltip.
    $('.container22 .redes a[title]').on('click', function() {
        var $tooltip = $(this).data('tooltip-element');
        if ($tooltip) {
            $tooltip.remove(); // Quita el tooltip inmediatamente
            $(this).removeData('tooltip-element');
        }
        // Asegúrate de que el título se restaure si el mouseleave no se disparó (poco probable pero seguro)
        var originalTitle = $(this).data('original-title');
        if (originalTitle) {
             $(this).attr('title', originalTitle);
             $(this).removeData('original-title');
        }
    });

    
    
    
      $(document).on('click', '.btn-anular', function () {
        const guiaId = $(this).data('id');
  
        Swal.fire({
          title: '¿Estás seguro?',
          text: 'Esta acción anulará la guía. No se puede revertir.',
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Sí, anular',
          cancelButtonText: 'Cancelar'
        }).then((result) => {
          if (result.isConfirmed) {
            // Hacer la petición AJAX al backend
            $.ajax({
              url: `/guia/delete/${guiaId}`, // Tu endpoint para anular
              method: 'PUT', // O el método que tu backend espere (DELETE, POST, etc.)
              contentType: 'application/json', // Si envías datos JSON en el body
              // data: JSON.stringify({ estado: 'anulada' }), // Si necesitas enviar un cuerpo
              success: function (data) {
                if (data.success) {
                  Swal.fire(
                    '¡Anulada!',
                    data.message || 'La guía ha sido anulada correctamente.',
                    'success'
                  ).then(() => location.reload()); // Recargar la página
                } else {
                  Swal.fire(
                    'Error',
                    data.message || 'No se pudo anular la guía.',
                    'error'
                  );
                }
              },
              error: function (jqXHR) { // Añadido jqXHR para acceder a responseJSON
                Swal.fire(
                  'Error',
                  jqXHR.responseJSON?.message || 'Hubo un problema con la petición.', // Mejor mensaje de error
                  'error'
                );
              }
            });
          }
        });
      });
});

    
// Evento al hacer clic en el botón de confirmar
$('#confirmDateBtn2X23').on('click', async function() {
    const guiaId = $(this).data('guia-id');
    const direccion = $(this).data('guia-direccion');
    const lugar_recogida = $(this).data('lugar');

    console.log('ID de la guía:', guiaId);


    console.log('Dirección completa seleccionada:', direccion);
   
    const coordenadas = await obtenerCoordenadasX23(direccion);
    console.log('Coordenadas obtenidas:', coordenadas);
    

   

    if (coordenadas) {
        // Realiza la llamada AJAX enviando los datos por POST
        $.ajax({
            url: `/actualizar_lugar_recepcion`,
            method: 'POST',
            data: {
                _id: guiaId,
                lat: coordenadas.lat,
                lon: coordenadas.lng,
                status : "1", 
                lugar_recogida:lugar_recogida,
                direccion_recogida : direccion
            },
            success: function () {
                Swal.fire({
                    title: 'Lugar de recogida actualizado',
                    text: 'La dirección de recogida ha sido actualizada exitosamente.',
                    icon: 'success'
                }).then(() => {
                    // Refrescar la página
                    location.reload();
                });
            },
            error: function (error) {
                console.error('Error al actualizar la dirección:', error);
                Swal.fire({
                    title: 'Error',
                    text: 'Hubo un problema al actualizar la dirección. Intenta nuevamente.',
                    icon: 'error'
                });
            }
        });
    } else {
        Swal.fire({
            title: 'Error',
            text: 'No se pudieron obtener las coordenadas de la dirección.',
            icon: 'error'
        });
    }
});






  $(document).on('click', '[data-target="#selectDateModalX23"]', function () {
                const modal = $('#selectDateModalX23');
                
                // Extraer datos del botón
                const guiaId = $(this).data('id');
                const tipo_contenido = $(this).data('tipo_contenido');
                const direccion = $(this).data('direccion');
                const ciudad = $(this).data('ciudad');
                const estado = $(this).data('estado');
                const pais = $(this).data('pais');
                const zip = $(this).data('zip');
                
                console.log($(this).data('dias_ruta'))
                const diasMatch  = ($(this).data('dias_ruta')).match(/Dias:\s*([\d\s,]+)/);

                console.log(diasMatch)
                const lugar = $(this).data('lugar');
                const agencia = $(this).data('agencia');

                 const diasRuta = diasMatch[1];
                  
                  console.log('Días obtenidos:', diasRuta);
                
                // Actualizar contenido del modal si es necesario
                modal.find('#datetimepicker_input').val(''); // Resetear campo de fecha, si necesario
                
                // Puedes actualizar otros elementos del modal con estos datos, por ejemplo:
               


                 if (diasRuta ) {
                    // Utilizamos una expresión regular para extraer los días (números)
                  

                    // Convertimos la cadena de días a un array de enteros
                    const diasDisponibles = diasRuta.split(',').map(dia => parseInt(dia, 10));
                    console.log('dias disponibles',diasDisponibles)
                    const todosLosDias = [0, 1, 2, 3, 4, 5, 6];

                    // Calcular los días deshabilitados (aquellos que no están en diasDisponibles)
                    const diasDeshabilitados = todosLosDias.filter(dia => !diasDisponibles.includes(dia));

                    console.log('Días deshabilitados:', diasDeshabilitados);

                    // Re-inicializar el datetimepicker con los días deshabilitados
                    $('#kt_datetimepicker_1_3x').datetimepicker('destroy'); // Destruir la instancia previa
                    $('#kt_datetimepicker_1_3x').datetimepicker({
                        format: 'YYYY-MM-DD',
                        daysOfWeekDisabled: diasDeshabilitados,
                        minDate: moment().toDate(), 
                        widgetPositioning: {
                            horizontal: 'auto',
                            vertical: 'bottom'  // Asegura que se muestre hacia abajo
                            }, // Fecha mínima: hoy
                    });

                   

                    } else {
                    console.error('Formato de ruta no válido o días no encontrados.');
                    // Configura el datetimepicker sin deshabilitar ningún día, o según sea necesario.
                    $('#kt_datetimepicker_1_3x').datetimepicker('destroy');
                    $('#kt_datetimepicker_1_3x').datetimepicker({
                        format: 'YYYY-MM-DD',
                        minDate: moment().toDate(), 
                        widgetPositioning: {
                        horizontal: 'auto',
                        vertical: 'bottom'  // Asegura que se muestre hacia abajo
                        }, // Fecha mínima: hoy
                    });

                   

                }

                        // Si deseas guardar el id de la guía en un campo oculto para luego usarlo
                        modal.find('#confirmDateBtn').data('guia-id', guiaId);

                        // Mostrar el modal
                        modal.modal('show');

                        $('#origenes-select10').val(tipo_contenido)
        });



    $('#confirmDateBtn').on('click', function() {
            var guiaId = $(this).data('guia-id');  // Obtener el ID de la guía que se guardó antes
            var nuevaFecha = $('#datetimepicker_input').val();  // Obtener la nueva fecha seleccionada
            var contenido =  $('#origenes-select10').val(); 
            console.log('ID de la guía:', guiaId);
            console.log('Nueva fecha seleccionada:', nuevaFecha);

            // Realiza la llamada AJAX enviando los datos por POST
            $.ajax({
                url: `/actualizar_fecha_recepcion`,  // Ahora solo usas la ruta
                method: 'POST',
                data: {
                    _id: guiaId,  // Envía el ID de la guía en el cuerpo
                    fecha_recepcion: nuevaFecha,
                    contenido  // Envía la nueva fecha
                },
                success: function (response) {
                    Swal.fire({
                        title: 'Fecha actualizada',
                        text: 'La fecha de recogida ha sido actualizada exitosamente.',
                        icon: 'success'
                    }).then(() => {
                        // Refrescar la página
                         Swal.fire({
                        position: "top-end",
                        icon: "success",
                        title: "Registro Guardado",
                        showConfirmButton: false,
                        timer: 1500
                        });
                        location.reload();
                    });
                },
                error: function (error) {
                    console.error('Error al actualizar la fecha:', error);
                    Swal.fire({
                        title: 'Error',
                        text: 'Hubo un problema al actualizar la fecha. Intenta nuevamente.',
                        icon: 'error'
                    });
                }
            });
        });
    


   $('#kt_datetimepicker_1_3x').datetimepicker({
        format: 'YYYY-MM-DD',
        widgetPositioning: {
        horizontal: 'auto',
        vertical: 'bottom'  // Asegura que se muestre hacia abajo
        },
            daysOfWeekDisabled: [1, 2, 3, 4, 5, 6], // Deshabilita los días que quieras
            minDate: moment().toDate()
    });


   fetch('/api/session-data')
  .then(response => {
    if (!response.ok) {
      throw new Error('Error al obtener los datos de la sesión');
    }
    return response.json();
  })
  .then(data => {
    console.log('Nivel de permisos:', data.nivel);
    sessionData = data.nivel;
    if (data?.nivel?.perfil === 9) {
    // Obtener elementos de forma segura
    const topbarItem = document.querySelector('.topbar-item2');
    const container = document.getElementById('container22');
    
    // Verificar si los elementos existen antes de modificarlos
    if (topbarItem) {
        topbarItem.style.display = 'none';
    }
    
    if (container) {
        container.style.display = 'none';
    }
    
    // Opcional: agregar clase al body para manejar otros estilos
    document.body.classList.add('perfil-9');
   }

    console.log(sessionData)
  })
  .catch(error => {
    console.error('Error:', error);
  });


   $('#kt_datetimepicker_2').datetimepicker({
            format: 'YYYY-MM-DD'
            
  });

  $('#kt_datetimepicker_2').on('change.datetimepicker', function (e) {
      //  $('#kt_datetimepicker_3').datetimepicker('minDate', e.date);
    });

    $('#kt_datetimepicker_3').on('change.datetimepicker', function (e) {
      //  $('#kt_datetimepicker_2').datetimepicker('maxDate', e.date);
    });
  $('#kt_datetimepicker_4').datetimepicker({
            format: 'YYYY-MM-DD',
            
  });
  $('#kt_datetimepicker_5').datetimepicker({
            format: 'YYYY-MM-DD',
            
  });

        // Inicializa datetimepicker para el filtro Hasta
  $('#kt_datetimepicker_3').datetimepicker({
            format: 'YYYY-MM-DD'
          
  });

  
        // Inicializa datetimepicker para el filtro Hasta
  $('#kt_datetimepicker_7').datetimepicker({
            format: 'YYYY-MM-DD'
          
  });

  $('#kt_datetimepicker_6').datetimepicker({
            format: 'YYYY-MM-DD'
          
  });


   load_agencias();
   function load_agencias() {
      fetch('/agencias_listado', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        }
      })
      .then(response => response.json())
      .then(data => {
        cargar_agencias(data); 
      })
      .catch(error => {
        console.error('Error al cargar las agencias:', error);
      });
    }

    function cargar_agencias(agencias) {
      console.log(agencias)
        const stateSelect = $('#kt_select2_1-10');
        stateSelect.html('');
        stateSelect.append(`<option value=""></option>`);
        agencias.forEach(agencia => {
            stateSelect.append(`<option value="${agencia._id}">${agencia.NOMBRE}</option>`);
        });
        
    }
  
    //setInterval(fetchConversations, 30000); // Cada 30 segundos
   
 

    $.ajax({
    url: '/listaseguimiento2',
    method: 'GET',
    success: function(data) {
        const select = $('#segui_estado');
        select.empty(); // Limpia las opciones actuales

        // Rellenar el select con las opciones de los datos obtenidos
        data.forEach(item => {
            const option = `<option value="${item._id}">${item.nombre}</option>`;
            select.append(option);
           
        });
    },
    error: function(error) {
        console.error('Error al realizar la solicitud:', error);
    }
});



$('#guiaForm3').on('submit', function(e) {
    e.preventDefault(); // Evita el envío del formulario tradicional

    const formData = {
        segui_nro_guia: $('#segui_nro_guia').val(),
        segui_fecha: $('#segui_fecha').val(),
        segui_visual: $('#segui_visual').val(),
        segui_estado: $('#segui_estado').val(),
        segui_observacion: $('#segui_observacion').val(),
        segui_imagen: $('#imagen_segui').val()
    };

    $.ajax({
        url: '/seguimiento/agregar2',
        method: 'POST',
        contentType: 'application/json',
        data: JSON.stringify(formData),
        success: function(response) {
            if (response.success) {
              Swal.fire({
                    title: "Informacion  Actualizar!",
                    text: "Continúa registrando tus Seguimiento!",
                    icon: "success"
                    });
            $('#exampleModalScrollable33').modal('hide');
            } else {
                console.error('Error en el seguimiento:', response.message);
            }
        },
        error: function(error) {
            console.error('Error al realizar la solicitud:', error);
        }
    });
});




});
  
  

  </script>

